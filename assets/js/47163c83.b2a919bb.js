"use strict";(self.webpackChunkmy_documentation=self.webpackChunkmy_documentation||[]).push([[1888],{9186:(n,e,a)=>{a.r(e),a.d(e,{assets:()=>m,contentTitle:()=>d,default:()=>u,frontMatter:()=>o,metadata:()=>r,toc:()=>s});const r=JSON.parse('{"id":"db/ProjectDB/projektdb03-like-operator","title":"LIKE Operator","description":"","source":"@site/docs/06-db/ProjectDB/projektdb03-like-operator.md","sourceDirName":"06-db/ProjectDB","slug":"/db/ProjectDB/projektdb03-like-operator","permalink":"/my-documentation/docs/db/ProjectDB/projektdb03-like-operator","draft":false,"unlisted":false,"editUrl":"https://github.com/vascoalexander/my-documentation/tree/main/docs/06-db/ProjectDB/projektdb03-like-operator.md","tags":[],"version":"current","sidebarPosition":5,"frontMatter":{"sidebar_position":5,"description":"","draft":false,"title":"LIKE Operator"},"sidebar":"dbSidebar","previous":{"title":"ORDER BY","permalink":"/my-documentation/docs/db/ProjectDB/projektdb02-orderby"},"next":{"title":"Aggregat-Funktionen I","permalink":"/my-documentation/docs/db/ProjectDB/projektdb04-gruppierungundaggregatfunktionen1"}}');var t=a(4848),i=a(8453);const o={sidebar_position:5,description:"",draft:!1,title:"LIKE Operator"},d=void 0,m={},s=[];function c(n){const e={code:"code",pre:"pre",...(0,i.R)(),...n.components};return(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-sql",children:"-- Nutzen Sie die Datenbank ProjektDB, \n-- um die folgenden Aufgaben zu l\ufffdsen\n\n\n-- Aufgabe 3.1\n--\n-- Finden Sie Namen und Personalnummer aller Mitarbeiter, \n-- deren Name mit dem Buchstaben \"K\" beginnt.\n--\n--      nachname  id\n--      Kaufmann  2581\n--      Kr\ufffdger    17000\n--      Keller    25348\n\nSELECT nachname, id\nFROM Mitarbeiter\nWHERE nachname LIKE '[K]%';\n\n-- Aufgabe 3.2\n--\n-- Nennen Sie Namen, Vornamen und Id aller Mitarbeiter, \n-- deren Vorname als zweiten Buchstaben ein \"a\" hat.\n--\n--      nachname  vorname   id\n--      Sch\ufffdfer   Sabine    5765\n--      Meier     Rainer    9031\n--      Kr\ufffdger    Martin    17000\n--      M\ufffdller    Gabriele  18316\n--      Keller    Hans      25348\n\nSELECT nachname, vorname, id\nFROM Mitarbeiter\nWHERE vorname LIKE '_[a]%';\n\n-- Aufgabe 3.3\n--\n-- Finden Sie Abteilungs-Id und Standort aller Abteilungen, die \n-- sich in den Orten befinden, die mit einem Buchstaben zwischen \n-- \"N\" und \"Z\" beginnen.\n--\n--      id  stadt\n--      a3  Stuttgart\n--      a5  Ulm\n\nSELECT id, stadt\nFROM Abteilung\nWHERE stadt LIKE '[N-Z]%';\n\n-- Aufgabe 3.4\n--\n-- Finden Sie Id, Nachnamen und Vornamen aller Mitarbeiter, deren \n-- Namen nicht mit den Buchstaben K, L, M, N, O und P beginnen,\n-- und deren Vornamen nicht mit dem Buchstaben U beginnen.\n--\n--      id     nachname  vorname\n--      5765   Sch\ufffdfer   Sabine\n--      9912   Wolf      Klaus\n--      10102  Huber     Petra\n--      20204  Fuchs     Dirk\n--      22222  Vogel     Anke\n--      24321  Schubert  Rolf\n--      27365  Albrecht  Lena\n\nSELECT id, nachname, vorname\nFROM Mitarbeiter\nWHERE nachname LIKE '[^K-P]%' AND vorname LIKE '[^U]%';\n\n-- Aufgabe 3.5\n--\n-- Nennen Sie Vor- und Nachname aller Mitarbeiter, deren Name \n-- nicht mit \"er\" endet.\n--\n--      vorname   nachname\n--      Brigitte  Kaufmann\n--      Klaus     Wolf\n--      Dirk      Fuchs\n--      Anke      Vogel\n--      Rolf      Schubert\n--      Lena      Albrecht\n--      Andreas   Probst\n\nSELECT nachname, vorname\nFROM Mitarbeiter\nWHERE nachname NOT LIKE '%er';\n\nSELECT nachname, vorname\nFROM Mitarbeiter\nWHERE nachname LIKE '%[^e]_' AND nachname LIKE '%[^r]';\n\n-- Aufgabe 3.6\n--\n-- Wie kann man nach dem Unterstrich (_) oder dem Prozentzeichen (%)\n-- mit LIKE suchen? Finden Sie alle Kunden, in deren Datensatz ein \n-- solches Sonderzeichen vorkommt.\n--\n--      firma                  stadt\n--      100% Sonderzeichen AG  Baden_Baden\n\nSELECT firma, stadt\nFROM Kunde\nWHERE firma LIKE '%[%_]%';\n\nSELECT firma, stadt\nFROM Kunde\nWHERE firma LIKE '%\\%%' ESCAPE '\\\\';\n\n-- Aufgabe 3.7\n--\n-- Nennen Sie alle Mitarbeiter, deren Vorname mindestens \n-- drei Vokale enth\ufffdlt.\n--\n--      id     nachname  vorname   abt_id  stadt\n--      2581   Kaufmann  Brigitte  a2      NULL\n--      5765   Sch\ufffdfer   Sabine    a3      Landshut\n--      9031   Meier     Rainer    a2      NULL\n--      12121  Richter   Ursula    a4      M\ufffdnchen\n--      18316  M\ufffdller    Gabriele  a1      Rosenheim\n--      28559  Mozer     Sibille   a1      Ulm\n--      29346  Probst    Andreas   a2      Augsburg\n\nSELECT *\nFROM Mitarbeiter\nWHERE vorname LIKE '%[aeuio]%[aeuio]%[aeuio]%';\n\n-- Aufgabe 3.8\n-- \n-- Finden Sie alle Mitarbeiter, deren Vorname aus genau sieben\n-- Buchstaben besteht.\n--\n--      id     nachname  vorname  abt_id  stadt\n--      28559  Mozer     Sibille  a1      Ulm\n--      29346  Probst    Andreas  a2      Augsburg\n\nSELECT *\nFROM Mitarbeiter\nWHERE vorname LIKE '_______';\n\nSELECT *\nFROM Mitarbeiter\nWHERE LEN(vorname) = 7;\n\n-- Aufgabe 3.9\n--\n-- Finden Sie alle Mitarbeiter, deren Vorname aus genau sechs\n-- Buchstaben besteht und deren Vorname nicht mit einem Vokal endet.\n--\n--      id     nachname  vorname  abt_id  stadt\n--      9031   Meier     Rainer   a2      NULL\n--      17000  Kr\ufffdger    Martin   a5      Ulm\n\nSELECT *\nFROM Mitarbeiter\nWHERE vorname LIKE '______' AND vorname LIKE '%[^aueio]';\n\nSELECT *\nFROM Mitarbeiter\nWHERE vorname LIKE '_____[^aueio]';\n\n-- Aufgabe 3.10\n--\n-- Finden Sie alle Mitarbeiter, bei deren Vorname der vorletzte\n-- Buchstabe ein Vokal ist.\n--\n--      id     nachname  vorname  abt_id  stadt\n--      9031   Meier     Rainer   a2      NULL\n--      9912   Wolf      Klaus    a4      Heidenheim\n--      17000  Kr\ufffdger    Martin   a5      Ulm\n--      29346  Probst    Andreas  a2      Augsburg\n\nSELECT *\nFROM Mitarbeiter\nWHERE vorname LIKE '%[aueio]_';\n"})})}function u(n={}){const{wrapper:e}={...(0,i.R)(),...n.components};return e?(0,t.jsx)(e,{...n,children:(0,t.jsx)(c,{...n})}):c(n)}},8453:(n,e,a)=>{a.d(e,{R:()=>o,x:()=>d});var r=a(6540);const t={},i=r.createContext(t);function o(n){const e=r.useContext(i);return r.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function d(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(t):n.components||t:o(n.components),r.createElement(i.Provider,{value:e},n.children)}}}]);