"use strict";(self.webpackChunkmy_documentation=self.webpackChunkmy_documentation||[]).push([[7454],{71307:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>m,frontMatter:()=>s,metadata:()=>r,toc:()=>l});const r=JSON.parse('{"id":"Csharp/Strings/String-Formatting","title":"String Formatting","description":"","source":"@site/docs/04-Csharp/02-Strings/02-String-Formatting.md","sourceDirName":"04-Csharp/02-Strings","slug":"/Csharp/Strings/String-Formatting","permalink":"/my-documentation/docs/Csharp/Strings/String-Formatting","draft":false,"unlisted":false,"editUrl":"https://github.com/vascoalexander/my-documentation/tree/main/docs/04-Csharp/02-Strings/02-String-Formatting.md","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"created":"2025-02-24, 06:54","title":"String Formatting","description":"","sidebar_position":2,"language":"C#","tags":[],"draft":false},"sidebar":"csharpSidebar","previous":{"title":"String Operations","permalink":"/my-documentation/docs/Csharp/Strings/String-Operations"},"next":{"title":"Format Specifiers","permalink":"/my-documentation/docs/Csharp/Strings/Format-Specifiers"}}');var i=n(74848),a=n(28453);const s={created:"2025-02-24, 06:54",title:"String Formatting",description:"",sidebar_position:2,language:"C#",tags:[],draft:!1},o=void 0,c={},l=[{value:"Format a Table structure",id:"format-a-table-structure",level:2},{value:"Related Links",id:"related-links",level:2}];function d(e){const t={a:"a",code:"code",h2:"h2",hr:"hr",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-c",children:'// {index der variablen die eingesetzt wird:FORMAT}\n// C - Currency; U - Universal full date/time\n// Ausgabe: 150,00 \u20ac Samstag, 8. Februar 2025 18:25:11\nstatic DateTime thisDate = DateTime.Now;\nConsole.WriteLine("{0:C} {1:U}", 150, thisDate);\n'})}),"\n",(0,i.jsx)(t.hr,{}),"\n",(0,i.jsx)(t.h2,{id:"format-a-table-structure",children:"Format a Table structure"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-c",children:'using System;\n\nclass Program {\n    static void Main(string[] args) {\n        string headers = $"{"First Name", -20} {"Last Name", -20} {"Value", -20} {"Time", -20}";\n        string line\t= $"{"Luiz", -20} {"Parente", -20} {20, -20:C} {DateTime.Now, -20:d}";\n\n        Console.WriteLine(headers);\n        Console.WriteLine(line);\n    }\n}\n\n/*\nThis code example produces the following results:\n\nFirst Name           Last Name            Value                Time                \nLuiz                 Parente              $20.00               2/9/2020            \n*/\n'})}),"\n",(0,i.jsx)(t.h2,{id:"related-links",children:"Related Links"}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.a,{href:"https://gist.github.com/luizcentennial/c6353c2ae21815420e616a6db3897b4c",children:"String Formatting CheatSheet (Github)"})})]})}function m(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>s,x:()=>o});var r=n(96540);const i={},a=r.createContext(i);function s(e){const t=r.useContext(a);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:s(e.components),r.createElement(a.Provider,{value:t},e.children)}}}]);