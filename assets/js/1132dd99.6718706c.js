"use strict";(self.webpackChunkmy_documentation=self.webpackChunkmy_documentation||[]).push([[4352],{80828:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>s,contentTitle:()=>o,default:()=>m,frontMatter:()=>d,metadata:()=>i,toc:()=>u});const i=JSON.parse('{"id":"DB/ProjectDB/projektdb10-mengenoperatoren","title":"Mengen-Operatoren","description":"","source":"@site/docs/06-DB/04-ProjectDB/projektdb10-mengenoperatoren.md","sourceDirName":"06-DB/04-ProjectDB","slug":"/DB/ProjectDB/projektdb10-mengenoperatoren","permalink":"/my-documentation/docs/DB/ProjectDB/projektdb10-mengenoperatoren","draft":false,"unlisted":false,"editUrl":"https://github.com/vascoalexander/my-documentation/tree/main/docs/06-DB/04-ProjectDB/projektdb10-mengenoperatoren.md","tags":[],"version":"current","sidebarPosition":19,"frontMatter":{"sidebar_position":19,"description":"","draft":false,"title":"Mengen-Operatoren"},"sidebar":"dbSidebar","previous":{"title":"FUNKTIONEN","permalink":"/my-documentation/docs/DB/ProjectDB/projektdb09-funktionen"},"next":{"title":"Programmierung I","permalink":"/my-documentation/docs/DB/ProjectDB/projektdbp1-programmierung1"}}');var r=t(74848),a=t(28453);const d={sidebar_position:19,description:"",draft:!1,title:"Mengen-Operatoren"},o=void 0,s={},u=[];function b(n){const e={code:"code",pre:"pre",...(0,a.R)(),...n.components};return(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-sql",children:"-- Nutzen Sie die Datenbank ProjektDB, \n-- um die folgenden Aufgaben zu l\xf6sen:\n\n\n-- Aufgabe 10.1\n--\n-- Erstellen Sie eine Liste mit allen St\xe4dten, in\n-- denen entweder ein Mitarbeiter wohnt oder aber\n-- eine Abteilung ihren Sitz hat. Jede Stadt soll\n-- nur einmal angezeigt werden.\n--\n--      stadt\n--      NULL\n--      Augsburg\n--      F\xfcrth\n--      Heidenheim\n--      Landshut\n--      M\xfcnchen\n--      ...\n--      (9 Zeilen)\n\nSELECT stadt\nFROM Mitarbeiter\n\nUNION\n\nSELECT stadt\nFROM Abteilung;\n\n\n-- Aufgabe 10.2\n--\n-- Erstellen Sie eine Liste mit allen St\xe4dten, in\n-- denen entweder Mitarbeiter wohnen oder Kunden\n-- Ihren Sitz haben. Doppelte Eintr\xe4ge sollen nicht\n-- weggefiltert werden.\n--\n--      stadt\n--      NULL\n--      Landshut\n--      NULL\n--      Heidenheim\n--      Landshut\n--      M\xfcnchen\n--      ...\n--      (21 Zeilen)\n\nSELECT stadt\nFROM Mitarbeiter\n\nUNION ALL\n\nSELECT stadt\nFROM Kunde;\n\n-- Aufgabe 10.3\n--\n-- Geben Sie die Liste aus Aufgabe 10.2 jetzt sortiert\n-- nach dem St\xe4dtenamen aus.\n--\n--      stadt\n--      NULL\n--      NULL\n--      NULL\n--      Augsburg\n--      Baden_Baden\n--      F\xfcrth\n--      ...\n--      (21 Zeilen)\n\nSELECT stadt\nFROM Mitarbeiter\n\nUNION ALL\n\nSELECT stadt\nFROM Kunde\nORDER BY stadt;\n\n-- Aufgabe 10.4\n--\n-- Finden Sie die Ids der Mitarbeiter, die entweder \n-- der Abteilung a1 angeh\xf6ren oder nach dem 1.1.2019 \n-- in ihr Projekt eingetreten sind. Die Ids sollen \n-- aufsteigend sortiert ausgegeben werden.\n--\n--      id\n--      2581\n--      9031\n--      9912\n--      17000\n--      18316\n--      28559\n--      29346\n\nSELECT id\nFROM Mitarbeiter m\nJOIN Arbeit a ON m.id = a.mit_id\nWHERE abt_id = 'a1' OR a.einst_dat > '20190101';\n\n-- Aufgabe 10.5\n--\n-- Die Wohnorte der Mitarbeiter und die Standorte \n-- der Abteilungen sollen ausgewertet werden:\n--\n-- a) Zeigen Sie, an welchen Orten entweder\n--    Mitarbeiter wohnen oder Abteilungen sind.\n-- b) Zeigen Sie, an welchen Orten sowohl Mitarbeiter\n--    als auch Abteilungen sind.\n-- c) Zeigen Sie, an welchen Orten Mitarbeiter\n--    wohnen, aber keine Abteilungen sind\n-- d) Zeigen Sie, an welchen Orten Abteilungen sind,\n--    aber keine Mitarbeiter wohnen.\n--\n--  a) stadt       b) stadt    c) stadt       d) stadt\n--     NULL           M\xfcnchen     NULL           Stuttgart\n--     Augsburg       Ulm         Augsburg\n--     F\xfcrth                      F\xfcrth\n--     Heidenheim                 Heidenheim\n--     Landshut                   Landshut\n--     M\xfcnchen                    Rosenheim\n--     Rosenheim\n--     Stuttgart\n--     Ulm\n\n-- a)\nSELECT stadt\nFROM Mitarbeiter\nUNION\nSELECT stadt\nFROM Abteilung;\n\n-- b)\nSELECT stadt\nFROM Mitarbeiter\nINTERSECT\nSELECT stadt\nFROM Abteilung;\n\n-- c)\nSELECT stadt\nFROM Mitarbeiter\nEXCEPT\nSELECT stadt\nFROM Abteilung;\n\n-- d)\nSELECT stadt\nFROM Abteilung\nEXCEPT\nSELECT stadt\nFROM Mitarbeiter;\n\n-- Aufgabe 10.6\n--\n-- Erstellen Sie eine Liste der Mitarbeiter, die\n-- sowohl im Projekt \"p1\" als auch im Projekt \"p3\"\n-- arbeiten.\n--\n--      vorname  nachname\n--      Petra    Huber\n--      Rainer   Meier\n\nSELECT vorname, nachname\nFROM Mitarbeiter m\nJOIN Arbeit a ON m.id = a.mit_id\nWHERE a.pro_id = 'p1'\n\nINTERSECT\n\nSELECT vorname, nachname\nFROM Mitarbeiter m\nJOIN Arbeit a ON m.id = a.mit_id\nWHERE a.pro_id = 'p3';\n\n-- Aufgabe 10.7\n--\n-- Erstellen Sie eine Liste der Mitarbeiter, die in den\n-- Projekten \"p4\" und \"p5\" arbeiten und weniger als 4000\n-- verdienen.\n--  a)  Nutzen Sie den INTERSECT-Operator\n--  b)  Nutzen Sie den EXCEPT-Operator\n--\n--      vorname  nachname\n--      Dirk     Fuchs\n--      Klaus    Wolf\n--      Lena     Albrecht\n--      Ursula   Richter\n\n-- a)\nSELECT vorname, nachname\nFROM Mitarbeiter m\nJOIN Arbeit a ON m.id = a.mit_id\nWHERE a.pro_id = 'p4' OR a.pro_id = 'p5'\n\nINTERSECT\n\nSELECT vorname, nachname\nFROM Mitarbeiter m\nJOIN Gehalt g ON g.mit_id = m.id\nWHERE gehalt < 4000;\n\n-- b)\nSELECT vorname, nachname\nFROM Mitarbeiter m\nJOIN Arbeit a ON m.id = a.mit_id\nWHERE a.pro_id = 'p4' OR a.pro_id = 'p5'\n\nEXCEPT\n\nSELECT vorname, nachname\nFROM Mitarbeiter m\nJOIN Gehalt g ON g.mit_id = m.id\nWHERE gehalt >= 4000;\n\n-- Aufgabe 10.8\n--\n-- Erstellen Sie eine Liste aller Mitarbeiter, kombiniert\n-- mit einer Liste aller Kunden. Geben Sie Firma bzw. Namen\n-- und die Stadt aus.\n--\n--      firma                  stadt\n--      100% Sonderzeichen AG  Baden_Baden\n--      Andreas Probst         Augsburg\n--      Anke Vogel             M\xfcnchen\n--      Brigitte Kaufmann      NULL\n--      Dirk Fuchs             F\xfcrth\n--      Finanzamt Ulm          F\xfcrth\n--      ...\n--      (21 Zeilen)\n\nSELECT firma, stadt\nFROM Kunde\nUNION\nSELECT CONCAT(vorname, ' ', nachname), stadt\nFROM Mitarbeiter;\n\n-- Aufgabe 10.9\n--\n-- Erweitern Sie die Abfrage aus Aufgabe 10.8 und geben\n-- Sie auch noch die Abteilungen mit Bezeichnung und\n-- Stadt in der Liste aus.\n--\n--      bezeichnung            stadt\n--      100% Sonderzeichen AG  Baden_Baden\n--      Andreas Probst         Augsburg\n--      Anke Vogel             M\xfcnchen\n--      Beratung               M\xfcnchen\n--      Brigitte Kaufmann      NULL\n--      Diagnose               M\xfcnchen\n--      ...\n--      (26 Zeilen)\n\nSELECT firma AS bezeichnung, stadt\nFROM Kunde\nUNION\nSELECT CONCAT(vorname, ' ', nachname), stadt\nFROM Mitarbeiter\nUNION\nSELECT bezeichnung, stadt\nFROM Abteilung;\n\n-- Aufgabe 10.10\n--\n-- Um die \xdcbersichtlichkeit zu erh\xf6hen, soll in der\n-- Liste markiert werden, ob es sich um eine Abteilung,\n-- einen Mitarbeiter oder einen Kunden handelt.\n--\n--      bezeichnung            stadt        kategorie\n--      100% Sonderzeichen AG  Baden_Baden  Kunde\n--      Andreas Probst         Augsburg     Mitarbeiter\n--      Anke Vogel             M\xfcnchen      Mitarbeiter\n--      Beratung               M\xfcnchen      Abteilung\n--      Brigitte Kaufmann      NULL         Mitarbeiter\n--      Diagnose               M\xfcnchen      Abteilung\n--      ...\n--      (26 Zeilen)\n\nSELECT firma AS bezeichnung, stadt, 'Kunde' AS kategorie\nFROM Kunde\nUNION\nSELECT CONCAT(vorname, ' ', nachname), stadt, 'Mitarbeiter'\nFROM Mitarbeiter\nUNION\nSELECT bezeichnung, stadt, 'Abteilung'\n"})})}function m(n={}){const{wrapper:e}={...(0,a.R)(),...n.components};return e?(0,r.jsx)(e,{...n,children:(0,r.jsx)(b,{...n})}):b(n)}},28453:(n,e,t)=>{t.d(e,{R:()=>d,x:()=>o});var i=t(96540);const r={},a=i.createContext(r);function d(n){const e=i.useContext(a);return i.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function o(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(r):n.components||r:d(n.components),i.createElement(a.Provider,{value:e},n.children)}}}]);