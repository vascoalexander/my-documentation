"use strict";(self.webpackChunkmy_documentation=self.webpackChunkmy_documentation||[]).push([[7336],{81732:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>o,contentTitle:()=>c,default:()=>h,frontMatter:()=>a,metadata:()=>r,toc:()=>l});const r=JSON.parse('{"id":"Code/CSharp/Basics/Switch expression","title":"Switch expression","description":"","source":"@site/docs/09-Code/01-CSharp/01-Basics/Switch expression.md","sourceDirName":"09-Code/01-CSharp/01-Basics","slug":"/Code/CSharp/Basics/Switch expression","permalink":"/my-documentation/docs/Code/CSharp/Basics/Switch expression","draft":false,"unlisted":false,"editUrl":"https://github.com/vascoalexander/my-documentation/tree/main/docs/09-Code/01-CSharp/01-Basics/Switch expression.md","tags":[{"inline":true,"label":"property","permalink":"/my-documentation/docs/tags/property"},{"inline":true,"label":"tuple","permalink":"/my-documentation/docs/tags/tuple"},{"inline":true,"label":"switch","permalink":"/my-documentation/docs/tags/switch"},{"inline":true,"label":"when","permalink":"/my-documentation/docs/tags/when"}],"version":"current","frontMatter":{"created":"2025-02-23, 10:35","language":"C#","description":"","tags":["property","tuple","switch","when"]},"sidebar":"codeSidebar","previous":{"title":"Basics","permalink":"/my-documentation/docs/category/basics"},"next":{"title":"Ternary Operator","permalink":"/my-documentation/docs/Code/CSharp/Basics/Ternary Operator"}}');var i=t(74848),s=t(28453);const a={created:"2025-02-23, 10:35",language:"C#",description:"",tags:["property","tuple","switch","when"]},c=void 0,o={},l=[{value:"Switch Expression",id:"switch-expression",level:3},{value:"Property Pattern",id:"property-pattern",level:3},{value:"Tuple Pattern",id:"tuple-pattern",level:3},{value:"When-Klausel",id:"when-klausel",level:3}];function p(e){const n={code:"code",h3:"h3",hr:"hr",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h3,{id:"switch-expression",children:"Switch Expression"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-c",children:'string currentColor = Console.ReadLine();\nstring action = currentColor switch\n{\n    "Rot" => "Anhalten",\n    "Gelb" => "Warten",\n    "Gr\xfcn" => "Fahren",\n    _ => throw new InvalidOperationException("Ung\xfcltige Farbe")\n};\nConsole.WriteLine(action);\n'})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"property-pattern",children:"Property Pattern"}),"\n",(0,i.jsxs)(n.p,{children:["Eigenschaften von Objekten direkt im ",(0,i.jsx)(n.code,{children:"case"}),"-Ausdruck \xfcberpr\xfcfen"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-c",children:'public class Punkt\n{\n    public int X { get; set; }\n    public int Y { get; set; }\n}\n\nPunkt p = new Punkt { X = 1, Y = 2 };\nstring beschreibung = p switch\n{\n    { X: 0, Y: 0 } => "Ursprung",\n    { X: 0, Y: var y } => $"Y-Achse, Y={y}",\n    { X: var x, Y: 0 } => $"X-Achse, X={x}",\n    { X: var x, Y: var y } => $"Punkt ({x}, {y})"\n};\nConsole.WriteLine(beschreibung); // Ausgabe: Punkt (1, 2)\n'})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"tuple-pattern",children:"Tuple Pattern"}),"\n",(0,i.jsx)(n.p,{children:"mehrere Werte gleichzeitig in einem Tupel \xfcberpr\xfcfen"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-c",children:'(int x, int y) = (1, 2);\nstring position = (x, y) switch\n{\n    (0, 0) => "Ursprung",\n    (0, _) => "Y-Achse",\n    (_, 0) => "X-Achse",\n    (_, _) => "Andere"\n};\nConsole.WriteLine(position); // Ausgabe: Andere\n'})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"when-klausel",children:"When-Klausel"}),"\n",(0,i.jsxs)(n.p,{children:["zus\xe4tzliche Bedingungen mit ",(0,i.jsx)(n.code,{children:"when"})," hinzuf\xfcgen"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-c",children:'int zahl = 5;\nstring beschreibung = zahl switch\n{\n    var n when n > 0 && n < 10 => "Einstellige positive Zahl",\n    var n when n >= 10 && n < 100 => "Zweistellige positive Zahl",\n    _ => "Andere Zahl"\n};\nConsole.WriteLine(beschreibung); // Ausgabe: Einstellige positive Zahl\n'})})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(p,{...e})}):p(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>c});var r=t(96540);const i={},s=r.createContext(i);function a(e){const n=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),r.createElement(s.Provider,{value:n},e.children)}}}]);