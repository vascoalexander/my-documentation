"use strict";(self.webpackChunkmy_documentation=self.webpackChunkmy_documentation||[]).push([[9098],{65631:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>l,contentTitle:()=>t,default:()=>a,frontMatter:()=>i,metadata:()=>d,toc:()=>o});const d=JSON.parse('{"id":"Tools/Docker","title":"Docker","description":"Kurzanleitung: Docker \u2013 Die wichtigsten Befehle","source":"@site/docs/08-Tools/02-Docker.md","sourceDirName":"08-Tools","slug":"/Tools/Docker","permalink":"/my-documentation/docs/Tools/Docker","draft":false,"unlisted":false,"editUrl":"https://github.com/vascoalexander/my-documentation/tree/main/docs/08-Tools/02-Docker.md","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{},"sidebar":"toolsSidebar","previous":{"title":"GIT","permalink":"/my-documentation/docs/Tools/GIT"},"next":{"title":"asdf","permalink":"/my-documentation/docs/Tools/asdf"}}');var s=r(74848),c=r(28453);const i={},t=void 0,l={},o=[{value:"1. Images verwalten",id:"1-images-verwalten",level:2},{value:"2. Container verwalten",id:"2-container-verwalten",level:2},{value:"3. Netzwerke &amp; Volumes",id:"3-netzwerke--volumes",level:2},{value:"Netzwerke",id:"netzwerke",level:3},{value:"Volumes",id:"volumes",level:3},{value:"4. Docker Compose (optional)",id:"4-docker-compose-optional",level:2},{value:"5. N\xfctzliche Optionen &amp; Flags",id:"5-n\xfctzliche-optionen--flags",level:2},{value:"Kurztipp",id:"kurztipp",level:3},{value:"Install &amp; Config Script",id:"install--config-script",level:2}];function h(e){const n={code:"code",h2:"h2",h3:"h3",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,c.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Kurzanleitung: Docker \u2013 Die wichtigsten Befehle"})}),"\n",(0,s.jsx)(n.p,{children:"Im Folgenden findest du eine kompakte \xdcbersicht der g\xe4ngigsten Docker\u2011Befehle. Die Beispiele nutzen die Kommandozeile (Terminal)."}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"1-images-verwalten",children:"1. Images verwalten"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Befehl"}),(0,s.jsx)(n.th,{children:"Beschreibung"}),(0,s.jsx)(n.th,{children:"Beispiel"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"docker pull <image>"})}),(0,s.jsx)(n.td,{children:"Image aus Registry (z.\u202fB. Docker Hub) laden"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"docker pull nginx:latest"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"docker images"})}),(0,s.jsx)(n.td,{children:"Lokale Images auflisten"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"docker images"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"docker rmi <image>"})}),(0,s.jsx)(n.td,{children:"Lokales Image l\xf6schen"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"docker rmi nginx:latest"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"docker build -t <tag> ."})}),(0,s.jsx)(n.td,{children:"Image aus Dockerfile bauen und taggen"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"docker build -t mein-app:1.0 ."})})]})]})]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"2-container-verwalten",children:"2. Container verwalten"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Befehl"}),(0,s.jsx)(n.th,{children:"Beschreibung"}),(0,s.jsx)(n.th,{children:"Beispiel"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"docker run [OPTIONS] <image> [COMMAND] [ARGS]"})}),(0,s.jsx)(n.td,{children:"Neuen Container starten"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"docker run -d --name web nginx:latest"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"docker ps"})}),(0,s.jsx)(n.td,{children:"Laufende Container anzeigen"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"docker ps"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"docker ps -a"})}),(0,s.jsx)(n.td,{children:"Alle Container (auch gestoppte) anzeigen"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"docker ps -a"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"docker stop <container>"})}),(0,s.jsx)(n.td,{children:"Container stoppen"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"docker stop web"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"docker start <container>"})}),(0,s.jsx)(n.td,{children:"Gestoppten Container starten"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"docker start web"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"docker restart <container>"})}),(0,s.jsx)(n.td,{children:"Container neu starten (stop + start)"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"docker restart web"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"docker rm <container>"})}),(0,s.jsx)(n.td,{children:"Container l\xf6schen"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"docker rm web"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"docker exec -it <container> <shell>"})}),(0,s.jsx)(n.td,{children:"Befehl/Shell in laufendem Container ausf\xfchren"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"docker exec -it web /bin/bash"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"docker logs <container>"})}),(0,s.jsx)(n.td,{children:"Logs eines Containers anzeigen"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"docker logs web"})})]})]})]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"3-netzwerke--volumes",children:"3. Netzwerke & Volumes"}),"\n",(0,s.jsx)(n.h3,{id:"netzwerke",children:"Netzwerke"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Befehl"}),(0,s.jsx)(n.th,{children:"Beschreibung"}),(0,s.jsx)(n.th,{children:"Beispiel"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"docker network ls"})}),(0,s.jsx)(n.td,{children:"Netzwerke auflisten"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"docker network ls"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"docker network create <net_name>"})}),(0,s.jsx)(n.td,{children:"Neues Netzwerk anlegen"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"docker network create my-net"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"docker network rm <net_name>"})}),(0,s.jsx)(n.td,{children:"Netzwerk l\xf6schen"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"docker network rm my-net"})})]})]})]}),"\n",(0,s.jsx)(n.h3,{id:"volumes",children:"Volumes"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Befehl"}),(0,s.jsx)(n.th,{children:"Beschreibung"}),(0,s.jsx)(n.th,{children:"Beispiel"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"docker volume ls"})}),(0,s.jsx)(n.td,{children:"Volumes auflisten"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"docker volume ls"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"docker volume create <vol_name>"})}),(0,s.jsx)(n.td,{children:"Neues Volume anlegen"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"docker volume create db-data"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"docker volume rm <vol_name>"})}),(0,s.jsx)(n.td,{children:"Volume l\xf6schen"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"docker volume rm db-data"})})]})]})]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"4-docker-compose-optional",children:"4. Docker Compose (optional)"}),"\n",(0,s.jsx)(n.p,{children:"Mit Docker\u202fCompose kannst du Multi\u2011Container\u2011Anwendungen in einer YAML\u2011Datei definieren."}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Befehl"}),(0,s.jsx)(n.th,{children:"Beschreibung"}),(0,s.jsx)(n.th,{children:"Beispiel"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"docker-compose up"})}),(0,s.jsxs)(n.td,{children:["Container wie in ",(0,s.jsx)(n.code,{children:"docker-compose.yml"})," starten (im Vordergrund)"]}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"docker-compose up"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"docker-compose up -d"})}),(0,s.jsx)(n.td,{children:"Im Hintergrund starten"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"docker-compose up -d"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"docker-compose down"})}),(0,s.jsx)(n.td,{children:"Alle Ressourcen stoppen und entfernen"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"docker-compose down"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"docker-compose ps"})}),(0,s.jsx)(n.td,{children:"Status der definierten Services anzeigen"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"docker-compose ps"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"docker-compose logs [service]"})}),(0,s.jsx)(n.td,{children:"Logs eines Service anzeigen"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"docker-compose logs db"})})]})]})]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"5-n\xfctzliche-optionen--flags",children:"5. N\xfctzliche Optionen & Flags"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"-d"}),"\n\u2192 Container detached (im Hintergrund) starten"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"--name <name>"}),"\n\u2192 Eigener Name f\xfcr Container"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"-p <host>:<container>"}),"\n\u2192 Ports mappen (z.\u202fB. ",(0,s.jsx)(n.code,{children:"-p 8080:80"}),")"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"-v <host_path>:<container_path>"}),"\n\u2192 Volume/Verzeichnis mounten"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"-e <VAR>=<WERT>"}),"\n\u2192 Umgebungsvariable setzen"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"--rm"}),"\n\u2192 Container nach Stop automatisch l\xf6schen"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"-it"}),"\n\u2192 Interaktiver Modus mit pseudo\u2011TTY (z.\u202fB. f\xfcr Shell)"]}),"\n"]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"kurztipp",children:"Kurztipp"}),"\n",(0,s.jsxs)(n.p,{children:["Erstelle f\xfcr wiederkehrende Setups ein ",(0,s.jsx)(n.strong,{children:"Dockerfile"})," und/oder eine ",(0,s.jsx)(n.strong,{children:"docker-compose.yml"}),", um alle Container\u2011Konfigurationen versioniert und portabel zu halten."]}),"\n",(0,s.jsx)(n.p,{children:"Mit dieser \xdcbersicht hast du die wichtigsten Docker\u2011Kommandos zum Start in der Hand!"}),"\n",(0,s.jsx)(n.h2,{id:"install--config-script",children:"Install & Config Script"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"git clone https://gist.github.com/eb06509366e58b21d1a1e9fe59b8ba1c.git\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'#!/usr/bin/env bash\n# ===============================\n# Script: docker_setup.sh\n# Beschreibung: Installiert Docker auf Linux Mint (Ubuntu-basiert) und richtet die Docker-Gruppe ein.\n# ===============================\n\nset -euo pipefail\n\n# 1. Alte Docker-Versionen entfernen\nsudo apt remove -y docker docker-engine docker.io containerd runc || true\n\n# 2. System aktualisieren\nsudo apt update\nsudo apt upgrade -y\n\n# 3. Abh\xe4ngigkeiten installieren\nsudo apt install -y ca-certificates curl gnupg lsb-release\n\n# 4. Docker GPG-Key hinzuf\xfcgen\nsudo mkdir -p /etc/apt/keyrings\ncurl -fsSL https://download.docker.com/linux/ubuntu/gpg |\n  sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg\n\n# 5. Repository einbinden (Ubuntu Jammy f\xfcr Mint 21.x)\necho \\\n  "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] \\\n  https://download.docker.com/linux/ubuntu jammy stable" |\n  sudo tee /etc/apt/sources.list.d/docker.list > /dev/null\n\n# 6. Paketliste aktualisieren und Docker installieren\nsudo apt update\nsudo apt install -y docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin\n\n# 7. Docker-Version pr\xfcfen\ndocker --version\n\n# 8. Docker-Testcontainer ausf\xfchren\ndocker run --rm hello-world\n\n# 9. Benutzer zur Docker-Gruppe hinzuf\xfcgen\nsudo usermod -aG docker "$USER"\necho "\n*** Bitte abmelden und neu anmelden, damit die Gruppenzuordnung wirkt. ***"\n'})})]})}function a(e={}){const{wrapper:n}={...(0,c.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(h,{...e})}):h(e)}},28453:(e,n,r)=>{r.d(n,{R:()=>i,x:()=>t});var d=r(96540);const s={},c=d.createContext(s);function i(e){const n=d.useContext(c);return d.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function t(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),d.createElement(c.Provider,{value:n},e.children)}}}]);