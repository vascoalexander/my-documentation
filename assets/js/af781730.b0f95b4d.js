"use strict";(self.webpackChunkmy_documentation=self.webpackChunkmy_documentation||[]).push([[4778],{14487:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>d,contentTitle:()=>s,default:()=>m,frontMatter:()=>o,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"Csharp/Async/Threading","title":"Threading","description":"","source":"@site/docs/04-Csharp/09-Async/01-Threading.md","sourceDirName":"04-Csharp/09-Async","slug":"/Csharp/Async/Threading","permalink":"/my-documentation/docs/Csharp/Async/Threading","draft":false,"unlisted":false,"editUrl":"https://github.com/vascoalexander/my-documentation/tree/main/docs/04-Csharp/09-Async/01-Threading.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"created":"2025-02-27, 19:35","title":"Threading","description":"","sidebar_position":1,"draft":false},"sidebar":"csharpSidebar","previous":{"title":"Async","permalink":"/my-documentation/docs/category/async"},"next":{"title":"Utitlity","permalink":"/my-documentation/docs/category/utitlity"}}');var i=n(74848),a=n(28453);const o={created:"2025-02-27, 19:35",title:"Threading",description:"",sidebar_position:1,draft:!1},s=void 0,d={},c=[];function h(t){const e={code:"code",p:"p",pre:"pre",...(0,a.R)(),...t.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(e.p,{children:'We can use multiple Threads to perform, different Tasks of our Program at the same time.\nCurrent thread running is the "main" thread.'}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-csharp",children:'using System.Threading;\n\nclass Program\n{\n\tstatic void Main()\n\t{\n\t\tThread mainThread = Thread.CurrentThread;\n\t\tmainThread.Name = "Main Thread";\n\n\t\t// with Parameters\n\t\tThread thread1 = new Thread(() => CountDown("Timer #1"));\n\t\tThread thread2 = new Thread(() => CountUp("Timer #2"));\n\t\t// without Parameters\n\t\t// Thread thread1 = new Thread(CountDown);\n\t\t// Thread thread2 = new Thread(CountUp);\n\t\t\n\t\tthread1.Start();\n\t\tthread2.Start();\n\n\t\tConsole.WriteLine(mainThread.Name + " is complete");\n\t}\n\t\n\tpublic static void CountDown(string name)\n\t{\n\t\tfor (int i = 10; i >= 0; i--)\n\t\t{\n\t\t\tConsole.WriteLine("Timer #1: " + i + " seconds");\n\t\t\tThread.Sleep(1000);\n\t\t}\n\t\tConsole.WriteLine("Timer #1 is complete");\n\t}\n\t\n\tpublic static void CountUp(string name)\n\t{\n\t\tfor (int i = 0; i <= 10; i++)\n\t\t{\n\t\t\tConsole.WriteLine("Timer #2: " + i + " seconds");\n\t\t\tThread.Sleep(1000);\n\t\t}\n\t\tConsole.WriteLine("Timer #2 is complete");\n\t}\n}\n'})})]})}function m(t={}){const{wrapper:e}={...(0,a.R)(),...t.components};return e?(0,i.jsx)(e,{...t,children:(0,i.jsx)(h,{...t})}):h(t)}},28453:(t,e,n)=>{n.d(e,{R:()=>o,x:()=>s});var r=n(96540);const i={},a=r.createContext(i);function o(t){const e=r.useContext(a);return r.useMemo((function(){return"function"==typeof t?t(e):{...e,...t}}),[e,t])}function s(t){let e;return e=t.disableParentContext?"function"==typeof t.components?t.components(i):t.components||i:o(t.components),r.createElement(a.Provider,{value:e},t.children)}}}]);