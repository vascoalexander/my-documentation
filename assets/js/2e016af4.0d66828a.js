"use strict";(self.webpackChunkmy_documentation=self.webpackChunkmy_documentation||[]).push([[2848],{4291:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>u,contentTitle:()=>d,default:()=>c,frontMatter:()=>o,metadata:()=>r,toc:()=>l});const r=JSON.parse('{"id":"dsa/rekursiv/prinzipien","title":"Prinzipien","description":"","source":"@site/docs/02-dsa/rekursiv/prinzipien.md","sourceDirName":"02-dsa/rekursiv","slug":"/dsa/rekursiv/prinzipien","permalink":"/my-documentation/docs/dsa/rekursiv/prinzipien","draft":false,"unlisted":false,"editUrl":"https://github.com/vascoalexander/my-documentation/tree/main/docs/02-dsa/rekursiv/prinzipien.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"description":"","sidebar_position":1,"title":"Prinzipien"},"sidebar":"dsaSidebar","previous":{"title":"Rekursiv","permalink":"/my-documentation/docs/category/rekursiv"},"next":{"title":"Faktorialberechnung","permalink":"/my-documentation/docs/dsa/rekursiv/faktorialberechnung"}}');var s=i(4848),t=i(8453);const o={description:"",sidebar_position:1,title:"Prinzipien"},d=void 0,u={},l=[{value:"Prinzipien der Rekursiven Programmierung",id:"prinzipien-der-rekursiven-programmierung",level:3}];function a(e){const n={br:"br",h3:"h3",li:"li",ol:"ol",p:"p",strong:"strong",...(0,t.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.p,{children:"Rekursive Programmierung ist ein m\xe4chtiges Konzept in der Informatik und basiert auf der Idee, dass eine Funktion sich selbst aufruft, um ein Problem zu l\xf6sen."}),"\n",(0,s.jsx)(n.h3,{id:"prinzipien-der-rekursiven-programmierung",children:"Prinzipien der Rekursiven Programmierung"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Basisfall (Terminationsbedingung)"}),(0,s.jsx)(n.br,{}),"\n","Jede rekursive Funktion muss einen Basisfall haben, der die Rekursion stoppt. Dieser Fall gibt das Ergebnis direkt zur\xfcck, ohne einen weiteren Funktionsaufruf."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Rekursiver Fall"}),(0,s.jsx)(n.br,{}),"\n","Hier wird das Problem in kleinere Teilprobleme zerlegt, die sich der urspr\xfcnglichen Struktur des Problems \xe4hneln. Die Funktion ruft sich selbst mit diesen kleineren Teilproblemen auf."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Zerlegung und Wiederzusammensetzung"}),(0,s.jsx)(n.br,{}),"\n","Das Problem wird in kleinere, einfachere Teilprobleme zerlegt. Nach der L\xf6sung der Teilprobleme werden die Teilergebnisse kombiniert, um die L\xf6sung des urspr\xfcnglichen Problems zu bilden."]}),"\n"]}),"\n"]})]})}function c(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(a,{...e})}):a(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>o,x:()=>d});var r=i(6540);const s={},t=r.createContext(s);function o(e){const n=r.useContext(t);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),r.createElement(t.Provider,{value:n},e.children)}}}]);