"use strict";(self.webpackChunkmy_documentation=self.webpackChunkmy_documentation||[]).push([[1786],{3370:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>d,default:()=>a,frontMatter:()=>i,metadata:()=>l,toc:()=>h});const l=JSON.parse('{"id":"linux/regex","title":"Regex","description":"","source":"@site/docs/07-linux/regex.md","sourceDirName":"07-linux","slug":"/linux/regex","permalink":"/my-documentation/docs/linux/regex","draft":false,"unlisted":false,"editUrl":"https://github.com/vascoalexander/my-documentation/tree/main/docs/07-linux/regex.md","tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"title":"Regex","sidebar_position":3,"description":"","draft":false},"sidebar":"linuxSidebar","previous":{"title":"Zeitgesteuerte Jobs","permalink":"/my-documentation/docs/linux/zeitgesteuerte-jobs"},"next":{"title":"SSH","permalink":"/my-documentation/docs/linux/ssh"}}');var s=n(4848),r=n(8453);const i={title:"Regex",sidebar_position:3,description:"",draft:!1},d=void 0,c={},h=[{value:"Regex Quickreference",id:"regex-quickreference",level:2},{value:"Basic Regex",id:"basic-regex",level:2},{value:"Extended Regex",id:"extended-regex",level:2},{value:"Subpatterns ()",id:"subpatterns-",level:2},{value:"OR |",id:"or-",level:2},{value:"Character Classes",id:"character-classes",level:2},{value:"Characters",id:"characters",level:2},{value:"Quantifiers",id:"quantifiers",level:2},{value:"H\xe4ufig verwendete Muster",id:"h\xe4ufig-verwendete-muster",level:2},{value:"Anwendungsbeispiele",id:"anwendungsbeispiele",level:2},{value:"Email-Adresse pr\xfcfen (Python)",id:"email-adresse-pr\xfcfen-python",level:3},{value:"URL aus einem Text extrahieren (Python)",id:"url-aus-einem-text-extrahieren-python",level:3},{value:"Windows Dateipfad pr\xfcfen (Bash)",id:"windows-dateipfad-pr\xfcfen-bash",level:3},{value:"Linux Dateipfad pr\xfcfen (Bash)",id:"linux-dateipfad-pr\xfcfen-bash",level:3},{value:"IPv4-Adresse validieren (JavaScript)",id:"ipv4-adresse-validieren-javascript",level:3},{value:"Telefonnummer bereinigen (DE - Python)",id:"telefonnummer-bereinigen-de---python",level:3},{value:"Postleitzahlen filtern (Bash)",id:"postleitzahlen-filtern-bash",level:3},{value:"JSON-String validieren (Python)",id:"json-string-validieren-python",level:3},{value:"HTML-Tags entfernen (Python)",id:"html-tags-entfernen-python",level:3},{value:"Leerzeilen aus Datei entfernen (Bash)",id:"leerzeilen-aus-datei-entfernen-bash",level:3}];function x(e){const t={a:"a",br:"br",code:"code",em:"em",h2:"h2",h3:"h3",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(t.p,{children:["Tool zum Testen von Regex-Mustern:",(0,s.jsx)(t.br,{}),"\n",(0,s.jsx)(t.a,{href:"https://regex101.com/",children:(0,s.jsx)(t.strong,{children:"regex101.com"})})]}),"\n",(0,s.jsx)(t.h2,{id:"regex-quickreference",children:"Regex Quickreference"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-bash",children:'## Grundlagen\n.       - Beliebiges Zeichen au\xdfer Zeilenumbruch\n^       - Anfang der Zeile\n$       - Ende der Zeile\n*       - 0 oder mehr Wiederholungen\n+       - 1 oder mehr Wiederholungen\n?       - 0 oder 1 Wiederholung\n{n}     - Genau n Wiederholungen\n{n,}    - Mindestens n Wiederholungen\n{n,m}   - Zwischen n und m Wiederholungen\n|       - Oder (z.B. `a|b` matcht "a" oder "b")\n()      - Gruppierung (subpatterns)\n[]      - Zeichenklasse (z.B. `[a-z]` f\xfcr Kleinbuchstaben)\n\n## H\xe4ufig verwendete Zeichenklassen\n\\d      - Ziffern (0-9)\n\\D      - Keine Ziffern\n\\w      - Wortzeichen (a-z, A-Z, 0-9, _)\n\\W      - Kein Wortzeichen\n\\s      - Leerraum (Leerzeichen, Tab, Zeilenumbruch)\n\\S      - Kein Leerraum\n'})}),"\n",(0,s.jsx)(t.h2,{id:"basic-regex",children:"Basic Regex"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Basic Regex"}),(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Operator"}),(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Meaning"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"Period operator"}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"."})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"Matches any one single character."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"List operator"}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"[ ][^ ]"})}),(0,s.jsxs)(t.td,{style:{textAlign:"left"},children:["Defines a list or range of literal characters that can match one character. If the first character is the\xa0negation\xa0",(0,s.jsx)(t.code,{children:"^"}),"\xa0operator, it matches any character that is\xa0not\xa0in the list."]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"Asterisk operator"}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"*"})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"Matches zero or more instances of the previous character."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"Front anchor operator"}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"^"})}),(0,s.jsxs)(t.td,{style:{textAlign:"left"},children:["If\xa0",(0,s.jsx)(t.code,{children:"^"}),"\xa0is the first character in the pattern, then the entire pattern must be present at the beginning of the line to match. If\xa0",(0,s.jsx)(t.code,{children:"^"}),"\xa0is not the first character, then it is treated as an ordinary literal\xa0",(0,s.jsx)(t.code,{children:"^"}),"\xa0character."]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"Back anchor operator"}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"$"})}),(0,s.jsxs)(t.td,{style:{textAlign:"left"},children:["If\xa0",(0,s.jsx)(t.code,{children:"$"}),"\xa0is the last character in the pattern, then the pattern must be at the end of the line to match, otherwise, it is treated as a literal\xa0",(0,s.jsx)(t.code,{children:"$"}),"\xa0character."]})]})]})]}),"\n",(0,s.jsx)(t.h2,{id:"extended-regex",children:"Extended Regex"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Extended Regex"}),(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Operators"}),(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Meaning"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"Grouping operator"}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"( )"})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"Groups characters together to form a subpattern."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"Asterisk operator"}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"*"})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"Previous character (or subpattern) is present zero or more times."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"Plus operator"}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"+"})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"Previous character (or subpattern) is present at least one or more times."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"Question mark operator"}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"?"})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"Previous character (or subpattern) is present zero or one time (but not more)."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"Curly brace operator"}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"{,}"})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"Specify minimum, maximum, or exact matches of the previous character (or subpattern)."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"Alternation operator"}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"|"})}),(0,s.jsxs)(t.td,{style:{textAlign:"left"},children:["Logical OR of choices. For example,\xa0",(0,s.jsx)(t.code,{children:"abc|def|xyz"}),"\xa0matches\xa0",(0,s.jsx)(t.code,{children:"abc"}),"\xa0or\xa0",(0,s.jsx)(t.code,{children:"def"}),"\xa0or\xa0",(0,s.jsx)(t.code,{children:"xyz"}),"."]})]})]})]}),"\n",(0,s.jsx)(t.h2,{id:"subpatterns-",children:"Subpatterns ()"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Pattern"}),(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Meaning"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"xyz+"})}),(0,s.jsxs)(t.td,{style:{textAlign:"left"},children:["Matches the\xa0",(0,s.jsx)(t.code,{children:"xy"}),"\xa0string followed by one or more of the\xa0",(0,s.jsx)(t.code,{children:"z"}),"\xa0character"]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"(xyz)+"})}),(0,s.jsxs)(t.td,{style:{textAlign:"left"},children:["Matches one or more copies of the\xa0",(0,s.jsx)(t.code,{children:"xyz"}),"\xa0string"]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"xyz?"})}),(0,s.jsxs)(t.td,{style:{textAlign:"left"},children:["Matches the\xa0",(0,s.jsx)(t.code,{children:"xy"}),"\xa0string followed by zero or one of the\xa0",(0,s.jsx)(t.code,{children:"z"}),"\xa0character"]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"x(yz)?"})}),(0,s.jsxs)(t.td,{style:{textAlign:"left"},children:["Matches the\xa0",(0,s.jsx)(t.code,{children:"x"}),"\xa0character followed by zero or one of the\xa0",(0,s.jsx)(t.code,{children:"yz"}),"\xa0string"]})]})]})]}),"\n",(0,s.jsx)(t.h2,{id:"or-",children:"OR |"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Pattern"}),(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Meaning"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"abc|xyz"})}),(0,s.jsxs)(t.td,{style:{textAlign:"left"},children:["Matches the\xa0",(0,s.jsx)(t.code,{children:"abc"}),"\xa0string or the\xa0",(0,s.jsx)(t.code,{children:"xyz"}),"\xa0string"]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"ab(c|d|e) / ab[cde]"})}),(0,s.jsxs)(t.td,{style:{textAlign:"left"},children:["Matches the\xa0",(0,s.jsx)(t.code,{children:"ab"}),"\xa0string followed by a\xa0",(0,s.jsx)(t.code,{children:"c"}),"\xa0or\xa0",(0,s.jsx)(t.code,{children:"d"}),"\xa0or\xa0",(0,s.jsx)(t.code,{children:"e"}),"\xa0character"]})]})]})]}),"\n",(0,s.jsx)(t.h2,{id:"character-classes",children:"Character Classes"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Character"}),(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Legend"}),(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Example"}),(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Sample Match"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"[ \u2026 ]"}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"One of the characters in the brackets"}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"[AEIOU]"}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"One uppercase vowel"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"[ \u2026 ]"}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"One of the characters in the brackets"}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"T[ao]p"}),(0,s.jsxs)(t.td,{style:{textAlign:"left"},children:[(0,s.jsx)(t.em,{children:"Tap"}),"\xa0or\xa0",(0,s.jsx)(t.em,{children:"Top"})]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"-"}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"Range indicator"}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"[a-z]"}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"One lowercase letter"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"[x-y]"}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"One of the characters in the range from x to y"}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"[A-Z]+"}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"GREAT"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"[ \u2026 ]"}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"One of the characters in the brackets"}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"[AB1-5w-z]"}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"One of either: A,B,1,2,3,4,5,w,x,y,z"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"[x-y]"}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"One of the characters in the range from x to y"}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"[\u2002-~]+"}),(0,s.jsxs)(t.td,{style:{textAlign:"left"},children:["Characters in the printable section of the\xa0",(0,s.jsx)(t.a,{href:"http://www.asciitable.com/",children:"ASCII table"}),"."]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"[^x]"}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"One character that is not x"}),(0,s.jsxs)(t.td,{style:{textAlign:"left"},children:["[^a-z]",3]}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"A1!"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"[^x-y]"}),(0,s.jsxs)(t.td,{style:{textAlign:"left"},children:["One of the characters\xa0",(0,s.jsx)(t.strong,{children:"not"}),"\xa0in the range from x to y"]}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"[^\u2002-~]+"}),(0,s.jsxs)(t.td,{style:{textAlign:"left"},children:["Characters that are\xa0",(0,s.jsx)(t.strong,{children:"not"}),"\xa0in the printable section of the\xa0",(0,s.jsx)(t.a,{href:"http://www.asciitable.com/",children:"ASCII table"}),"."]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"[\\d\\D]"}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"One character that is a digit or a non-digit"}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"[\\d\\D]+"}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"Any characters, including new lines, which the regular dot doesn't match"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"[\\x41]"}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"Matches the character at hexadecimal position 41 in the ASCII table, i.e. A"}),(0,s.jsxs)(t.td,{style:{textAlign:"left"},children:["[\\x41-\\x45]",3]}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"ABE"})]})]})]}),"\n",(0,s.jsx)(t.h2,{id:"characters",children:"Characters"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Character"}),(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Legend"}),(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Example"}),(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Sample Match"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"\\d"}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"Most engines: one digit from 0 to 9"}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"file_\\d\\d"}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"file_25"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"\\d"}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:".NET, Python 3: one Unicode digit in any script"}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"file_\\d\\d"}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"file_9\u0a69"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"\\w"}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:'Most engines: "word character": ASCII letter, digit or underscore'}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"\\w-\\w\\w\\w"}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"A-b_1"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"\\w"}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:'.Python 3: "word character": Unicode letter, ideogram, digit, or underscore'}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"\\w-\\w\\w\\w"}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"\u5b57-\u307e_\u06f3"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"\\w"}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:'.NET: "word character": Unicode letter, ideogram, digit, or connector'}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"\\w-\\w\\w\\w"}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"\u5b57-\u307e\u203f\u06f3"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"\\s"}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:'Most engines: "whitespace character": space, tab, newline, carriage return, vertical tab'}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"a\\sb\\sc"}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"a b c"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"\\s"}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:'.NET, Python 3, JavaScript: "whitespace character": any Unicode separator'}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"a\\sb\\sc"}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"a b c"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"\\D"}),(0,s.jsxs)(t.td,{style:{textAlign:"left"},children:["One character that is not a\xa0",(0,s.jsx)(t.em,{children:"digit"}),"\xa0as defined by your engine's\xa0",(0,s.jsx)(t.em,{children:"\\d"})]}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"\\D\\D\\D"}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"ABC"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"\\W"}),(0,s.jsxs)(t.td,{style:{textAlign:"left"},children:["One character that is not a\xa0",(0,s.jsx)(t.em,{children:"word character"}),"\xa0as defined by your engine's\xa0",(0,s.jsx)(t.em,{children:"\\w"})]}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"\\W\\W\\W\\W\\W"}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"*-+=)"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"\\S"}),(0,s.jsxs)(t.td,{style:{textAlign:"left"},children:["One character that is not a\xa0",(0,s.jsx)(t.em,{children:"whitespace character"}),"\xa0as defined by your engine's\xa0",(0,s.jsx)(t.em,{children:"\\s"})]}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"\\S\\S\\S\\S"}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"Yoyo"})]})]})]}),"\n",(0,s.jsx)(t.h2,{id:"quantifiers",children:"Quantifiers"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Quantifier"}),(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Legend"}),(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Example"}),(0,s.jsx)(t.th,{style:{textAlign:"left"},children:"Sample Match"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"+"}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"One or more"}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"Version \\w-\\w+"}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"Version A-b1_1"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"{3}"})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"Exactly three times"}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"\\D{3}"})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"ABC"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"{2,4}"})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"Two to four times"}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"\\d{2,4}"})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"156"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"{3,}"})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"Three or more times"}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:(0,s.jsx)(t.code,{children:"\\w{3,}"})}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"regex_tutorial"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"*"}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"Zero or more times"}),(0,s.jsxs)(t.td,{style:{textAlign:"left"},children:["A",(0,s.jsx)(t.em,{children:"B"}),"C*"]}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"AAACC"})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"?"}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"Once or none"}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"plurals?"}),(0,s.jsx)(t.td,{style:{textAlign:"left"},children:"plu"})]})]})]}),"\n",(0,s.jsx)(t.h2,{id:"h\xe4ufig-verwendete-muster",children:"H\xe4ufig verwendete Muster"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-bash",children:'### 1. Email-Adresse\n`[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}`  \n\u2705 `test.email@domain.com`  \n\u274c `test.email@domain,com`  \n\n### 2. URL\n`https?://[^\\s/$.?#].[^\\s]*`  \n\u2705 `https://example.com`  \n\u2705 `http://sub.domain.net/path?query=1`  \n\n### 3. Dateipfad (Windows)\n`[a-zA-Z]:\\\\(?:[^<>:"/\\\\|?*]+\\\\)*[^<>:"/\\\\|?*]*`  \n\u2705 `C:\\Users\\Name\\file.txt`  \n\u274c `C:/Users/Name/file.txt`  \n\n### 4. Dateipfad (Linux/Mac)\n`(/[^/\\0]+)+/?`  \n\u2705 `/home/user/file.txt`  \n\u274c `home/user/file.txt`  \n\n### 5. IPv4-Adresse\n`\\b(?:\\d{1,3}\\.){3}\\d{1,3}\\b`  \n\u2705 `192.168.1.1`  \n\u274c `999.999.999.999`  \n\n### 6. Telefonnummer (DE)\n`(?:\\+49|0)[1-9][0-9]{9,10}`  \n\u2705 `+4917612345678`  \n\u2705 `017612345678`  \n\n### 7. Postleitzahl (DE)\n`\\b\\d{5}\\b`  \n\u2705 `10115`  \n\u274c `1234`  \n\n### 8. JSON-Formatierung pr\xfcfen\n`\\{(?:[^{}]|(?R))*\\}`  \n\u2705 `{"key": "value"}`  \n\u274c `{"key": "value"` \n(fehlt `}`)  \n\n### 9. HTML-Tags entfernen\n`<[^>]+>` \u2192 Ersetzen durch `""`  \n\u2705 `<p>Hello</p>` \u2192 `Hello`  \n\n### 10. Leerzeilen entfernen\n`^\\s*$` \u2192 Ersetzen durch `""`  \n'})}),"\n",(0,s.jsx)(t.h2,{id:"anwendungsbeispiele",children:"Anwendungsbeispiele"}),"\n",(0,s.jsx)(t.h3,{id:"email-adresse-pr\xfcfen-python",children:"Email-Adresse pr\xfcfen (Python)"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-python",children:'import re\n\nemail = "test.email@domain.com"\npattern = r"^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$"\n\nif re.match(pattern, email):\n    print("\u2705 G\xfcltige Email")\nelse:\n    print("\u274c Ung\xfcltige Email")\n'})}),"\n",(0,s.jsx)(t.h3,{id:"url-aus-einem-text-extrahieren-python",children:"URL aus einem Text extrahieren (Python)"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-python",children:'import re\n\ntext = "Besuche meine Seite: https://example.com und http://test.de"\npattern = r"https?://[^\\s/$.?#].[^\\s]*"\n\nurls = re.findall(pattern, text)\nprint("Gefundene URLs:", urls)\n'})}),"\n",(0,s.jsx)(t.h3,{id:"windows-dateipfad-pr\xfcfen-bash",children:"Windows Dateipfad pr\xfcfen (Bash)"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-bash",children:'echo "C:\\Users\\Name\\file.txt" | grep -E "^[a-zA-Z]:\\\\(?:[^<>:\\"/\\\\|?*]+\\\\)*[^<>:\\"/\\\\|?*]*$"\n'})}),"\n",(0,s.jsx)(t.h3,{id:"linux-dateipfad-pr\xfcfen-bash",children:"Linux Dateipfad pr\xfcfen (Bash)"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-bash",children:'echo "/home/user/file.txt" | grep -E "^(/[^/\\0]+)+/?$"\n'})}),"\n",(0,s.jsx)(t.h3,{id:"ipv4-adresse-validieren-javascript",children:"IPv4-Adresse validieren (JavaScript)"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-javascript",children:'const ipPattern = /\\b(?:\\d{1,3}\\.){3}\\d{1,3}\\b/;\nconst ip = "192.168.1.1";\n\nif (ipPattern.test(ip)) {\n    console.log("\u2705 G\xfcltige IP");\n} else {\n    console.log("\u274c Ung\xfcltige IP");\n}\n'})}),"\n",(0,s.jsx)(t.h3,{id:"telefonnummer-bereinigen-de---python",children:"Telefonnummer bereinigen (DE - Python)"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-python",children:'import re\n\nnumber = "Meine Nummer ist +49 176 12345678"\npattern = r"(?:\\+49|0)[1-9][0-9]{9,10}"\nmatch = re.search(pattern, number)\n\nif match:\n    print("Gefundene Nummer:", match.group())\n'})}),"\n",(0,s.jsx)(t.h3,{id:"postleitzahlen-filtern-bash",children:"Postleitzahlen filtern (Bash)"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-bash",children:'echo "Berlin 10115" | grep -Eo "\\b\\d{5}\\b"\n'})}),"\n",(0,s.jsx)(t.h3,{id:"json-string-validieren-python",children:"JSON-String validieren (Python)"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-python",children:'import json\n\ndata = \'{"name": "Max", "age": 25}\'\ntry:\n    json.loads(data)\n    print("\u2705 G\xfcltiges JSON")\nexcept json.JSONDecodeError:\n    print("\u274c Ung\xfcltiges JSON")\n'})}),"\n",(0,s.jsx)(t.h3,{id:"html-tags-entfernen-python",children:"HTML-Tags entfernen (Python)"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-python",children:'import re\n\nhtml = "<p>Hello <b>World</b></p>"\nclean_text = re.sub(r"<[^>]+>", "", html)\nprint(clean_text)  # Output: Hello World\n'})}),"\n",(0,s.jsx)(t.h3,{id:"leerzeilen-aus-datei-entfernen-bash",children:"Leerzeilen aus Datei entfernen (Bash)"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-bash",children:"sed '/^\\s*$/d' input.txt > output.txt\n"})}),"\n",(0,s.jsxs)(t.p,{children:["\ud83d\udd25 ",(0,s.jsx)(t.strong,{children:"Zus\xe4tzliche Tipps:"})]}),"\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"Python"}),": re.search() gibt das erste Vorkommen zur\xfcck, re.findall() alle Treffer.",(0,s.jsx)(t.br,{}),"\n",(0,s.jsx)(t.strong,{children:"JavaScript"}),": .match() gibt Treffer zur\xfcck, .replace() kann direkt ersetzen.",(0,s.jsx)(t.br,{}),"\n",(0,s.jsx)(t.strong,{children:"Bash"}),": grep -E f\xfcr erweiterte Regex, sed f\xfcr Ersetzungen."]})]})}function a(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(x,{...e})}):x(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>i,x:()=>d});var l=n(6540);const s={},r=l.createContext(s);function i(e){const t=l.useContext(r);return l.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function d(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),l.createElement(r.Provider,{value:t},e.children)}}}]);