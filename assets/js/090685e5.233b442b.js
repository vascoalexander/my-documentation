"use strict";(self.webpackChunkmy_documentation=self.webpackChunkmy_documentation||[]).push([[5547],{1109:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>d,frontMatter:()=>o,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"Csharp/IO-Operations/User-Input","title":"User Input","description":"","source":"@site/docs/04-Csharp/05-IO-Operations/03-User-Input.md","sourceDirName":"04-Csharp/05-IO-Operations","slug":"/Csharp/IO-Operations/User-Input","permalink":"/my-documentation/docs/Csharp/IO-Operations/User-Input","draft":false,"unlisted":false,"editUrl":"https://github.com/vascoalexander/my-documentation/tree/main/docs/04-Csharp/05-IO-Operations/03-User-Input.md","tags":[{"inline":true,"label":"Console","permalink":"/my-documentation/docs/tags/console"},{"inline":true,"label":"TryParse","permalink":"/my-documentation/docs/tags/try-parse"}],"version":"current","sidebarPosition":3,"frontMatter":{"created":"2025-02-25, 18:26","title":"User Input","description":"","sidebar_position":3,"draft":false,"tags":["Console","TryParse"]},"sidebar":"csharpSidebar","previous":{"title":"CSV Files","permalink":"/my-documentation/docs/Csharp/IO-Operations/CSV-Files"},"next":{"title":"Konsolenausgabe","permalink":"/my-documentation/docs/Csharp/IO-Operations/Konsolenausgabe"}}');var r=s(74848),i=s(28453);const o={created:"2025-02-25, 18:26",title:"User Input",description:"",sidebar_position:3,draft:!1,tags:["Console","TryParse"]},a=void 0,l={},c=[{value:"Console Abfrage",id:"console-abfrage",level:2},{value:"Console Menu",id:"console-menu",level:2},{value:"Menu Choice",id:"menu-choice",level:2},{value:"TryParse (Loop)",id:"tryparse-loop",level:2},{value:"WaitForKeyPress",id:"waitforkeypress",level:2},{value:"String with Default Fallback",id:"string-with-default-fallback",level:2},{value:"string.isNullOrEmpty",id:"stringisnullorempty",level:2}];function u(e){const n={code:"code",h2:"h2",hr:"hr",pre:"pre",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h2,{id:"console-abfrage",children:"Console Abfrage"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-csharp",children:'static void PwAbfrage()\n{\n\tConsole.Write("Eingabe PW: ");\n\tConsole.WriteLine(\n\tConsole.ReadLine() == "1234"\n\t\t? "Zugriff erlaubt"\n\t\t: "Zugriff verweigert");\n}\n'})}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"console-menu",children:"Console Menu"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-csharp",children:'static void Menu()  \n{  \n    Console.WriteLine("Option w\xe4hlen:");  \n    Console.WriteLine("1) Option1");  \n    Console.WriteLine("2) Option2");  \n    Console.WriteLine("3) Option3");  \n    Console.Write("Ihre Eingabe: ");  \n}\n'})}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"menu-choice",children:"Menu Choice"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-csharp",children:'static int MenuChoice()  \n{  \n    var choice = 0;  \n    while ((!int.TryParse(Console.ReadLine(), out choice) && choice < 1) || choice > 3)  \n    {        \n\t    Console.Clear();  \n        Console.WriteLine("Ung\xfcltige Eingabe!");  \n        Menu();  \n    }    \n    return choice;  \n}\n'})}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"tryparse-loop",children:"TryParse (Loop)"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-csharp",children:'Console.Write("Enter a number: ");\nstring input = Console.ReadLine()!;  \nbool isNumber = int.TryParse(input, out int result);\n\nif (isNumber)  \n    Console.WriteLine("The number is: " + input);\nelse\n\tConsole.WriteLine("Thats not a number, IDIOT!");\n'})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-csharp",children:'string input = "";  \ndo  \n{  \n\tConsole.Write("Enter a number: ");  \n\tinput = Console.ReadLine()!;\n} while (!int.TryParse(input, out int number));  \n\nConsole.WriteLine("The number is: " + input);  \n'})}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"waitforkeypress",children:"WaitForKeyPress"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-csharp",children:'private static void WaitForKeyPress()  \n{  \n    Console.WriteLine("Any key to continue...");  \n    Console.ReadKey();  \n}\n'})}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"string-with-default-fallback",children:"String with Default Fallback"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-csharp",children:'// person class mit feld FirstName vorausgesetzt\nstring firstName = person?.FirstName ?? "Unknown";\nConsole.WriteLine(firstName);\n'})}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"stringisnullorempty",children:"string.isNullOrEmpty"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-csharp",children:"string input = Console.ReadLine()!;\nchar guess = !string.IsNullOrEmpty(input) ? input[0] : '_';\n// outputs first char of input or _ if input is null\n"})})]})}function d(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(u,{...e})}):u(e)}},28453:(e,n,s)=>{s.d(n,{R:()=>o,x:()=>a});var t=s(96540);const r={},i=t.createContext(r);function o(e){const n=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),t.createElement(i.Provider,{value:n},e.children)}}}]);