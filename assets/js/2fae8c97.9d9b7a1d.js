"use strict";(self.webpackChunkmy_documentation=self.webpackChunkmy_documentation||[]).push([[7454],{71307:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>m,frontMatter:()=>s,metadata:()=>r,toc:()=>d});const r=JSON.parse('{"id":"Csharp/Strings/String-Formatting","title":"String Formatting","description":"","source":"@site/docs/04-Csharp/02-Strings/02-String-Formatting.md","sourceDirName":"04-Csharp/02-Strings","slug":"/Csharp/Strings/String-Formatting","permalink":"/my-documentation/docs/Csharp/Strings/String-Formatting","draft":false,"unlisted":false,"editUrl":"https://github.com/vascoalexander/my-documentation/tree/main/docs/04-Csharp/02-Strings/02-String-Formatting.md","tags":[{"inline":true,"label":"stringBuilder","permalink":"/my-documentation/docs/tags/string-builder"}],"version":"current","sidebarPosition":2,"frontMatter":{"created":"2025-02-24, 06:54","title":"String Formatting","description":"","sidebar_position":2,"language":"C#","tags":["stringBuilder"],"draft":false},"sidebar":"csharpSidebar","previous":{"title":"String Operations","permalink":"/my-documentation/docs/Csharp/Strings/String-Operations"},"next":{"title":"Format Specifiers","permalink":"/my-documentation/docs/Csharp/Strings/Format-Specifiers"}}');var i=n(74848),a=n(28453);const s={created:"2025-02-24, 06:54",title:"String Formatting",description:"",sidebar_position:2,language:"C#",tags:["stringBuilder"],draft:!1},o=void 0,l={},d=[{value:"String.Format",id:"stringformat",level:2},{value:"Interpolated String Formatting",id:"interpolated-string-formatting",level:2},{value:"StringBuilder.AppendFormat()",id:"stringbuilderappendformat",level:2},{value:"String Interpolation",id:"string-interpolation",level:2},{value:"Format a Table structure",id:"format-a-table-structure",level:2},{value:"Related Links",id:"related-links",level:2}];function c(e){const t={a:"a",br:"br",code:"code",h2:"h2",hr:"hr",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.h2,{id:"stringformat",children:"String.Format"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-c",children:'// {index der variablen die eingesetzt wird:FORMAT}\n// C - Currency; U - Universal full date/time\nString.Format("{index[,alignment][:formatString]}", object);\n\nstring formatted = string.Format("{0:C} {1:U}", 150, thisDate); Console.WriteLine(formatted);\n// Ausgabe: 150,00 \u20ac Samstag, 8. Februar 2025 18:25:11\n\nstring fooFs = string.Format("Check Check, {0} {1}, {0} {1:0.0}", "AB", 23);\nConsole.WriteLine(fooFs)\n// Ausgabe: Check Check, AB 23, AB 23,0\n'})}),"\n",(0,i.jsx)(t.hr,{}),"\n",(0,i.jsx)(t.h2,{id:"interpolated-string-formatting",children:"Interpolated String Formatting"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-c",children:'var DateTime thisDate = DateTime.Now;\nConsole.WriteLine("{0:C} {1:U}", 150, thisDate);\n'})}),"\n",(0,i.jsx)(t.hr,{}),"\n",(0,i.jsx)(t.h2,{id:"stringbuilderappendformat",children:"StringBuilder.AppendFormat()"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-c",children:'using System.Text;\n\ndecimal num = 34.53567325m; \nvar builder = new StringBuilder(); \nbuilder.AppendFormat("Format Decimal: {0:n2}", num);\n'})}),"\n",(0,i.jsx)(t.hr,{}),"\n",(0,i.jsx)(t.h2,{id:"string-interpolation",children:"String Interpolation"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-c",children:'var DateTime thisDate = DateTime.Now;\nConsole.WriteLine($"{150:C} {thisDate:U}");\n'})}),"\n",(0,i.jsx)(t.hr,{}),"\n",(0,i.jsx)(t.h2,{id:"format-a-table-structure",children:"Format a Table structure"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-c",children:'string headers = $"{"First Name", -20}{"Last Name", -20}{"Value", -20}{"Time", -20}";\nstring line\t= $"{"Luiz", -20}{"Parente", -20}{20, -20:C}{DateTime.Now, -20:d}";\n\nConsole.WriteLine(headers);\nConsole.WriteLine(line);\n\n/*\nThis code example produces the following results:\n\nFirst Name           Last Name            Value                Time             \nLuiz                 Parente              $20.00               2/9/2020   \n*/\n'})}),"\n",(0,i.jsx)(t.h2,{id:"related-links",children:"Related Links"}),"\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.a,{href:"https://gist.github.com/luizcentennial/c6353c2ae21815420e616a6db3897b4c",children:"String Formatting CheatSheet (Github)"}),(0,i.jsx)(t.br,{}),"\n",(0,i.jsx)(t.a,{href:"https://dzone.com/articles/c-string-format-examples",children:"C# String Format Examples"})]})]})}function m(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>s,x:()=>o});var r=n(96540);const i={},a=r.createContext(i);function s(e){const t=r.useContext(a);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:s(e.components),r.createElement(a.Provider,{value:t},e.children)}}}]);