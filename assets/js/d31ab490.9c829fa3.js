"use strict";(self.webpackChunkmy_documentation=self.webpackChunkmy_documentation||[]).push([[7467],{28453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>l});var s=t(96540);const i={},a=s.createContext(i);function r(e){const n=s.useContext(a);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),s.createElement(a.Provider,{value:n},e.children)}},96042:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>o,contentTitle:()=>l,default:()=>d,frontMatter:()=>r,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"Csharp/Basics/Tuples","title":"Tuples","description":"","source":"@site/docs/04-Csharp/01-Basics/05-Tuples.md","sourceDirName":"04-Csharp/01-Basics","slug":"/Csharp/Basics/Tuples","permalink":"/my-documentation/docs/Csharp/Basics/Tuples","draft":false,"unlisted":false,"editUrl":"https://github.com/vascoalexander/my-documentation/tree/main/docs/04-Csharp/01-Basics/05-Tuples.md","tags":[],"version":"current","sidebarPosition":5,"frontMatter":{"created":"2025-02-23, 20:10","title":"Tuples","description":"","sidebar_position":5,"language":"C#","tags":[]},"sidebar":"csharpSidebar","previous":{"title":"Numeric Types","permalink":"/my-documentation/docs/Csharp/Basics/Numeric-Types"},"next":{"title":"Enums","permalink":"/my-documentation/docs/Csharp/Basics/Enum"}}');var i=t(74848),a=t(28453);const r={created:"2025-02-23, 20:10",title:"Tuples",description:"",sidebar_position:5,language:"C#",tags:[]},l=void 0,o={},c=[{value:"Deklaration und Initialisierung",id:"deklaration-und-initialisierung",level:3},{value:"List with named Tuples",id:"list-with-named-tuples",level:3},{value:"Related Links",id:"related-links",level:3}];function u(e){const n={a:"a",code:"code",h3:"h3",hr:"hr",p:"p",pre:"pre",strong:"strong",...(0,a.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.p,{children:"Available in C# 7.0 and later, the tuples feature provides concise syntax to group multiple data elements in a lightweight data structure."}),"\n",(0,i.jsx)(n.h3,{id:"deklaration-und-initialisierung",children:"Deklaration und Initialisierung"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-csharp",children:'(double, int) t1 = (4.5, 3);\nConsole.WriteLine($"Tuple with elements {t1.Item1} and {t1.Item2}.");\n\n// Named Tuples\n(double num1, int num2) t2 = (4.5, 3);  \nConsole.WriteLine($"First Number: {t2.num1}\\nSecond Number: {t2.num2}");\n'})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"list-with-named-tuples",children:"List with named Tuples"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-csharp",children:'var list = new List<(int num, string name)>();\nlist.Add((1, "str1"));\nlist.Add((3, "str2"));\n\nforeach ((int num, string name) in list)\n{\n    Console.WriteLine(name + ": " + num);    \n}\n'})}),"\n",(0,i.jsx)(n.h3,{id:"related-links",children:"Related Links"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://learn.microsoft.com/en-us/dotnet/csharp/language-reference/builtin-types/value-tuples",children:(0,i.jsx)(n.strong,{children:"Microsoft Docs - Tuple types"})})})]})}function d(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(u,{...e})}):u(e)}}}]);