"use strict";(self.webpackChunkmy_documentation=self.webpackChunkmy_documentation||[]).push([[8918],{11555:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>d,default:()=>h,frontMatter:()=>r,metadata:()=>l,toc:()=>c});const l=JSON.parse('{"id":"DB/SQL/Operators","title":"Operators","description":"","source":"@site/docs/06-DB/02-SQL/05-Operators.md","sourceDirName":"06-DB/02-SQL","slug":"/DB/SQL/Operators","permalink":"/my-documentation/docs/DB/SQL/Operators","draft":false,"unlisted":false,"editUrl":"https://github.com/vascoalexander/my-documentation/tree/main/docs/06-DB/02-SQL/05-Operators.md","tags":[],"version":"current","sidebarPosition":5,"frontMatter":{"sidebar_position":5,"description":"","draft":false,"title":"Operators"},"sidebar":"dbSidebar","previous":{"title":"Datentypen","permalink":"/my-documentation/docs/DB/SQL/Datentypen"},"next":{"title":"Constraints","permalink":"/my-documentation/docs/DB/SQL/Constrains"}}');var i=t(74848),s=t(28453);const r={sidebar_position:5,description:"",draft:!1,title:"Operators"},d=void 0,a={},c=[{value:"ARITHMETIC OPERATORS",id:"arithmetic-operators",level:3},{value:"COMPARISON OPERATORS",id:"comparison-operators",level:3},{value:"LOGICAL OPERATORS",id:"logical-operators",level:3},{value:"BETWEEN",id:"between",level:3},{value:"IN",id:"in",level:3},{value:"LIKE",id:"like",level:3},{value:"IS: NULL-Pr\xfcfung",id:"is-null-pr\xfcfung",level:3},{value:"BITWISE OPERATORS",id:"bitwise-operators",level:3},{value:"STRING-KONKATENATION",id:"string-konkatenation",level:3},{value:"CASE",id:"case",level:3},{value:"COALESCE &amp; ISNULL",id:"coalesce--isnull",level:3},{value:"ALL",id:"all",level:3},{value:"ANY",id:"any",level:3},{value:"EXISTS",id:"exists",level:3}];function o(e){const n={code:"code",em:"em",h3:"h3",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h3,{id:"arithmetic-operators",children:"ARITHMETIC OPERATORS"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sql",children:"SELECT 5 + 3      AS Addition, \n       5 - 3      AS Subtraction, \n       5 * 3      AS Multiplication, \n       5 / 3.0    AS Division, \n       5 % 3      AS Modulus;\n"})}),"\n",(0,i.jsx)(n.h3,{id:"comparison-operators",children:"COMPARISON OPERATORS"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.code,{children:"=, <>, >, <, >=, <="})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sql",children:"SELECT * \nFROM Employees \nWHERE Salary >= 50000;\n"})}),"\n",(0,i.jsx)(n.h3,{id:"logical-operators",children:"LOGICAL OPERATORS"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sql",children:"SELECT * \nFROM Employees \nWHERE Salary > 50000 AND Department = 'IT';\n\nSELECT * \nFROM Employees \nWHERE Salary > 50000 OR Department = 'HR';\n\nSELECT * \nFROM Employees \nWHERE NOT (Department = 'IT');\n"})}),"\n",(0,i.jsx)(n.h3,{id:"between",children:"BETWEEN"}),"\n",(0,i.jsx)(n.p,{children:"Werte innerhalb eines Bereichs"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sql",children:"SELECT * \nFROM Orders \nWHERE OrderDate BETWEEN '2025-01-01' AND '2025-01-31';\n"})}),"\n",(0,i.jsx)(n.h3,{id:"in",children:"IN"}),"\n",(0,i.jsx)(n.p,{children:"\xdcbereinstimmung mit einer Liste von Werten"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sql",children:"SELECT * \nFROM Orders \nWHERE Status IN ('Pending', 'Processing');\n"})}),"\n",(0,i.jsx)(n.h3,{id:"like",children:"LIKE"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sql",children:"SELECT * \nFROM Customers \nWHERE Name LIKE 'A%';\n"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Pattern Matching mit LIKE"})}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{style:{textAlign:"left"},children:"Jokerzeichen"}),(0,i.jsx)(n.th,{style:{textAlign:"left"},children:"Bedeutung"}),(0,i.jsx)(n.th,{style:{textAlign:"left"},children:"Beispiel"}),(0,i.jsx)(n.th,{style:{textAlign:"left"},children:"Erkl\xe4rung"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{style:{textAlign:"left"},children:(0,i.jsx)(n.code,{children:"%"})}),(0,i.jsx)(n.td,{style:{textAlign:"left"},children:"Beliebige Anzahl von Zeichen (auch kein Zeichen)"}),(0,i.jsx)(n.td,{style:{textAlign:"left"},children:"'M%'`"}),(0,i.jsx)(n.td,{style:{textAlign:"left"},children:'Findet alle Namen, die mit "M" beginnen (z. B. "Max", "Maria", "Michael")'})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{style:{textAlign:"left"},children:(0,i.jsx)(n.code,{children:"_"})}),(0,i.jsx)(n.td,{style:{textAlign:"left"},children:"Genau ein beliebiges Zeichen"}),(0,i.jsx)(n.td,{style:{textAlign:"left"},children:"'J_n'`"}),(0,i.jsx)(n.td,{style:{textAlign:"left"},children:'Findet Namen mit genau drei Zeichen, die mit "J" beginnen und auf "n" enden (z. B. "Jan", "Jon")'})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{style:{textAlign:"left"},children:(0,i.jsx)(n.code,{children:"[ ]"})}),(0,i.jsx)(n.td,{style:{textAlign:"left"},children:"Bestimmte Zeichen an einer Position"}),(0,i.jsx)(n.td,{style:{textAlign:"left"},children:"'T[ae]m'`"}),(0,i.jsx)(n.td,{style:{textAlign:"left"},children:'Findet "Tam" oder "Tem", aber nicht "Tim"'})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{style:{textAlign:"left"},children:(0,i.jsx)(n.code,{children:"[^ ]"})}),(0,i.jsx)(n.td,{style:{textAlign:"left"},children:"Ausschluss bestimmter Zeichen"}),(0,i.jsx)(n.td,{style:{textAlign:"left"},children:"'T[^a]m'`"}),(0,i.jsx)(n.td,{style:{textAlign:"left"},children:'Findet "Tim" oder "Tom", aber nicht "Tam"'})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{style:{textAlign:"left"},children:(0,i.jsx)(n.code,{children:"[ - ]"})}),(0,i.jsx)(n.td,{style:{textAlign:"left"},children:"Zeichenbereich"}),(0,i.jsx)(n.td,{style:{textAlign:"left"},children:"'C[a-c]t'`"}),(0,i.jsx)(n.td,{style:{textAlign:"left"},children:'Findet "Cat", "Cbt" oder "Cct"'})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{style:{textAlign:"left"},children:(0,i.jsx)(n.code,{children:"ESCAPE"})}),(0,i.jsxs)(n.td,{style:{textAlign:"left"},children:["Erm\xf6glicht die Suche nach Sonderzeichen (",(0,i.jsx)(n.code,{children:"%"})," oder ",(0,i.jsx)(n.code,{children:"_"}),")"]}),(0,i.jsx)(n.td,{style:{textAlign:"left"},children:(0,i.jsx)(n.code,{children:"WHERE Name LIKE '50\\\\%' ESCAPE '\\\\'"})}),(0,i.jsx)(n.td,{style:{textAlign:"left"},children:'Findet "50%" statt "50irgendwas"'})]})]})]}),"\n",(0,i.jsx)(n.h3,{id:"is-null-pr\xfcfung",children:"IS: NULL-Pr\xfcfung"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sql",children:"SELECT * \nFROM Products \nWHERE Discontinued IS NULL;\n"})}),"\n",(0,i.jsx)(n.h3,{id:"bitwise-operators",children:"BITWISE OPERATORS"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sql",children:"DECLARE @a INT = 5, @b INT = 3;\nSELECT @a & @b AS BitwiseAND, \n       @a | @b AS BitwiseOR, \n       @a ^ @b AS BitwiseXOR;\n"})}),"\n",(0,i.jsx)(n.h3,{id:"string-konkatenation",children:"STRING-KONKATENATION"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sql",children:"SELECT 'Hello, ' + 'World!' AS Greeting;\n"})}),"\n",(0,i.jsx)(n.h3,{id:"case",children:"CASE"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sql",children:"SELECT Name,\n       CASE \n         WHEN Salary > 70000 THEN 'High'\n         WHEN Salary BETWEEN 50000 AND 70000 THEN 'Medium'\n         ELSE 'Low'\n       END AS SalaryLevel\nFROM Employees;\n"})}),"\n",(0,i.jsx)(n.h3,{id:"coalesce--isnull",children:"COALESCE & ISNULL"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.em,{children:"(NULL-Behandlung)"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sql",children:"SELECT Name, COALESCE(Phone, 'No Phone') AS PhoneNumber FROM Employees;\nSELECT Name, ISNULL(Phone, 'No Phone')    AS PhoneNumber FROM Employees;\n"})}),"\n",(0,i.jsx)(n.h3,{id:"all",children:"ALL"}),"\n",(0,i.jsxs)(n.p,{children:["Vergleicht einen Wert mit ",(0,i.jsx)(n.em,{children:"allen"})," Werten in einer Unterabfrage.\n",(0,i.jsx)(n.strong,{children:"Beispiel:"})," Finde alle Produkte, deren Preis h\xf6her ist als der Preis ",(0,i.jsx)(n.em,{children:"aller"})," Produkte in der Kategorie 'Elektronik'."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sql",children:"SELECT Produktname\nFROM Produkte\nWHERE Preis > ALL (SELECT Preis FROM Produkte WHERE Kategorie = 'Elektronik');\n"})}),"\n",(0,i.jsx)(n.h3,{id:"any",children:"ANY"}),"\n",(0,i.jsxs)(n.p,{children:["Vergleicht einen Wert mit ",(0,i.jsx)(n.em,{children:"mindestens einem"})," Wert in einer Unterabfrage.\n",(0,i.jsx)(n.strong,{children:"Beispiel"}),": Finde alle Produkte, deren Preis h\xf6her ist als der Preis ",(0,i.jsx)(n.em,{children:"irgendeines"})," Produkts in der Kategorie 'Elektronik'."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sql",children:"SELECT Produktname\nFROM Produkte\nWHERE Preis > ANY (SELECT Preis FROM Produkte WHERE Kategorie = 'Elektronik');\n"})}),"\n",(0,i.jsx)(n.h3,{id:"exists",children:"EXISTS"}),"\n",(0,i.jsxs)(n.p,{children:["Pr\xfcft, ob eine Unterabfrage ",(0,i.jsx)(n.em,{children:"mindestens eine Zeile"})," zur\xfcckgibt.\n",(0,i.jsx)(n.strong,{children:"Beispiel"}),": Finde alle Kunden, die mindestens eine Bestellung aufgegeben haben."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sql",children:"SELECT Kundenname\nFROM Kunden\nWHERE EXISTS (SELECT 1 FROM Bestellungen WHERE KundenID = Kunden.KundenID);\n"})})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(o,{...e})}):o(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>d});var l=t(96540);const i={},s=l.createContext(i);function r(e){const n=l.useContext(s);return l.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),l.createElement(s.Provider,{value:n},e.children)}}}]);