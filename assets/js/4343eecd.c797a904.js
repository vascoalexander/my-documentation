"use strict";(self.webpackChunkmy_documentation=self.webpackChunkmy_documentation||[]).push([[2584],{30958:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>u,contentTitle:()=>o,default:()=>d,frontMatter:()=>a,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"Code/CSharp/Basics/enumerations-enum","title":"enumerations, enum","description":"","source":"@site/docs/09-Code/01-CSharp/01-Basics/enumerations-enum.md","sourceDirName":"09-Code/01-CSharp/01-Basics","slug":"/Code/CSharp/Basics/enumerations-enum","permalink":"/my-documentation/docs/Code/CSharp/Basics/enumerations-enum","draft":false,"unlisted":false,"editUrl":"https://github.com/vascoalexander/my-documentation/tree/main/docs/09-Code/01-CSharp/01-Basics/enumerations-enum.md","tags":[{"inline":true,"label":"menu","permalink":"/my-documentation/docs/tags/menu"},{"inline":true,"label":"switch","permalink":"/my-documentation/docs/tags/switch"},{"inline":true,"label":"enum","permalink":"/my-documentation/docs/tags/enum"}],"version":"current","frontMatter":{"created":"2025-02-23, 14:37","title":"enumerations, enum","description":"","language":"C#","tags":["menu","switch","enum"]},"sidebar":"codeSidebar","previous":{"title":"Tuples","permalink":"/my-documentation/docs/Code/CSharp/Basics/Tuples"},"next":{"title":"Collections","permalink":"/my-documentation/docs/category/collections"}}');var r=t(74848),s=t(28453);const a={created:"2025-02-23, 14:37",title:"enumerations, enum",description:"",language:"C#",tags:["menu","switch","enum"]},o=void 0,u={},c=[{value:"Enum.GetName()",id:"enumgetname",level:3},{value:"Cast zu numerischen Typen",id:"cast-zu-numerischen-typen",level:3},{value:"Numerische Typen zu Enums",id:"numerische-typen-zu-enums",level:3},{value:"Enum.Parse",id:"enumparse",level:3},{value:"Iterieren \xfcber ein enum",id:"iterieren-\xfcber-ein-enum",level:3},{value:"Enum mit Extensionklasse",id:"enum-mit-extensionklasse",level:3},{value:"Enum mit switch case",id:"enum-mit-switch-case",level:3}];function l(e){const n={code:"code",h3:"h3",hr:"hr",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h3,{id:"enumgetname",children:"Enum.GetName()"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-c",children:"public enum Color {\n    RED = 1,\n    GREEN = 2,\n    BLUE = 3\n}\n\nstring name = Enum.GetName(typeof(Color), 2);\nConsole.WriteLine(name); // Ausgabe: GREEN\n"})}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"cast-zu-numerischen-typen",children:"Cast zu numerischen Typen"}),"\n",(0,r.jsx)(n.p,{children:"In C# sind Enums im Grunde genommen benannte numerische Konstanten."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-c",children:"enum Wochentage { Montag, Dienstag, Mittwoch, Donnerstag, Freitag, Samstag, Sonntag }\n\nWochentage heute = Wochentage.Dienstag;\nint tagesnummer = (int)heute; // tagesnummer ist 1\n"})}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"numerische-typen-zu-enums",children:"Numerische Typen zu Enums"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-c",children:"Wochentage tag = (Wochentage)2; // tag ist Wochentage.Mittwoch\n"})}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"enumparse",children:"Enum.Parse"}),"\n",(0,r.jsxs)(n.p,{children:["C# bietet die ",(0,r.jsx)(n.code,{children:"Enum.Parse()"}),"- und ",(0,r.jsx)(n.code,{children:"Enum.TryParse()"}),"-Methoden, um Strings in Enum-Werte zu konvertieren."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-c",children:'Wochentage tag = (Wochentage)Enum.Parse(typeof(Wochentage), "Freitag");\n'})}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"iterieren-\xfcber-ein-enum",children:"Iterieren \xfcber ein enum"}),"\n",(0,r.jsxs)(n.p,{children:["Die ",(0,r.jsx)(n.code,{children:"Enum.GetValues()"}),"-Methode gibt ein Array mit den Werten der konstanten Elemente eines angegebenen Enumerationstyps zur\xfcck."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-c",children:"enum Wochentage { Montag, Dienstag, Mittwoch, Donnerstag, Freitag, Samstag, Sonntag }\n\nArray wochentage = Enum.GetValues(typeof(Wochentage));\nforeach (Wochentage tag in wochentage)\n{\n    Console.WriteLine(tag);\n}\n"})}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"enum-mit-extensionklasse",children:"Enum mit Extensionklasse"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-c",children:'public enum Color\n{\n    Red,\n    Green,\n    Blue\n}\n\npublic static class ColorExtensions\n{\n    public static string Description(this Color color)\n    {\n        switch (color)\n        {\n            case Color.Red:\n                return "This is red";\n            case Color.Green:\n                return "This is green";\n            case Color.Blue:\n                return "This is blue";\n            default:\n                return "Unknown color";\n        }\n    }\n}\n\n// Verwendung:\nColor myColor = Color.Green;\nstring description = myColor.Description();\nConsole.WriteLine(description); // Ausgabe: This is green\n'})}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"enum-mit-switch-case",children:"Enum mit switch case"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-c",children:'enum MenuOptionen  \n{  \n\tNeueDatei,  \n\tDatei\xd6ffnen,  \n\tDateiSpeichern,  \n\tBeenden  \n}\n\nstatic void Main()  \n{        \n\tswitch (GetMenuChoice())  \n\t{            \n\t\tcase MenuOptionen.NeueDatei:  \n\t\t\tConsole.WriteLine("Neue Datei wird erstellt...");  \n\t\t\tbreak;  \n\t\tcase MenuOptionen.Datei\xd6ffnen:  \n\t\t\tConsole.WriteLine("Datei wird ge\xf6ffnet...");  \n\t\t\tbreak;  \n\t\tcase MenuOptionen.DateiSpeichern:  \n\t\t\tConsole.WriteLine("Datei wird gespeichert...");  \n\t\t\tbreak;  \n\t\tcase MenuOptionen.Beenden:  \n\t\t\tConsole.WriteLine("Anwendung wird beendet...");  \n\t\t\tEnvironment.Exit(0);  \n\t\t\tbreak;  \n\t\tdefault:  \n\t\t\tConsole.WriteLine("Ung\xfcltige Option.");  \n\t\t\tbreak;  \n\t}    \n}\n\nstatic MenuOptionen GetMenuChoice()  \n{        \n\tConsole.WriteLine("Bitte w\xe4hlen Sie eine Option:");  \n\tConsole.WriteLine("1. Neue Datei");  \n\tConsole.WriteLine("2. Datei \xf6ffnen");  \n\tConsole.WriteLine("3. Datei speichern");  \n\tConsole.WriteLine("4. Beenden");  \n\n\tint choice;  \n\twhile (!int.TryParse(Console.ReadLine(), out choice))  \n\t\tConsole.WriteLine("Ung\xfcltige Eingabe.");  \n\treturn (MenuOptionen)(choice - 1);  \n}\n'})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-c",children:"public enum VerbindungsStatus\n{\n    Getrennt,\n    Verbindet,\n    Verbunden,\n    Fehler\n}\n\npublic void VerbindungsStatusVerarbeiten(VerbindungsStatus status)\n{\n    switch (status)\n    {\n        case VerbindungsStatus.Getrennt:\n            // Logik zum Herstellen einer Verbindung\n            break;\n        case VerbindungsStatus.Verbindet:\n            // Logik, w\xe4hrend der Verbindungsvorgang l\xe4uft\n            break;\n        case VerbindungsStatus.Verbunden:\n            // Logik f\xfcr eine aktive Verbindung\n            break;\n        case VerbindungsStatus.Fehler:\n            // Fehlerbehandlungslogik\n            break;\n        default:\n            break;\n    }\n}\n"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-c",children:'public enum BenutzerRolle\n{\n\tAdministrator,\n\tModerator,\n\tBenutzer,\n\tGast\n}\n\npublic bool HatZugriff(BenutzerRolle rolle, string ressource)\n{\n\tswitch (rolle)\n\t{\n\t\tcase BenutzerRolle.Administrator:\n\t\t\treturn true;\n\t\tcase BenutzerRolle.Moderator:\n\t\t\treturn ressource != "Admin-Bereich";\n\t\tcase BenutzerRolle.Benutzer:\n\t\t\treturn ressource == "Benutzer-Bereich";\n\t\tcase BenutzerRolle.Gast:\n\t\t\treturn false;\n\t\tdefault:\n\t\t\treturn false;\n\t}\n}\n'})})]})}function d(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>o});var i=t(96540);const r={},s=i.createContext(r);function a(e){const n=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),i.createElement(s.Provider,{value:n},e.children)}}}]);