"use strict";(self.webpackChunkmy_documentation=self.webpackChunkmy_documentation||[]).push([[1263],{28453:(e,t,n)=>{n.d(t,{R:()=>o,x:()=>d});var i=n(96540);const r={},s=i.createContext(r);function o(e){const t=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function d(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),i.createElement(s.Provider,{value:t},e.children)}},47702:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>h,contentTitle:()=>d,default:()=>l,frontMatter:()=>o,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"Csharp/Error-Handling/Exceptions","title":"Exceptions","description":"","source":"@site/docs/04-Csharp/08-Error-Handling/01-Exceptions.md","sourceDirName":"04-Csharp/08-Error-Handling","slug":"/Csharp/Error-Handling/Exceptions","permalink":"/my-documentation/docs/Csharp/Error-Handling/Exceptions","draft":false,"unlisted":false,"editUrl":"https://github.com/vascoalexander/my-documentation/tree/main/docs/04-Csharp/08-Error-Handling/01-Exceptions.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"created":"2025-02-26, 17:09","title":"Exceptions","description":"","sidebar_position":1,"draft":false},"sidebar":"csharpSidebar","previous":{"title":"Error Handling","permalink":"/my-documentation/docs/category/error-handling"},"next":{"title":"Try and Catch","permalink":"/my-documentation/docs/Csharp/Error-Handling/Try-and-Catch"}}');var r=n(74848),s=n(28453);const o={created:"2025-02-26, 17:09",title:"Exceptions",description:"",sidebar_position:1,draft:!1},d=void 0,h={},c=[{value:"System Exception",id:"system-exception",level:2},{value:"System.Data Exception",id:"systemdata-exception",level:2},{value:"System.IO Exception",id:"systemio-exception",level:2},{value:"Related Links",id:"related-links",level:2}];function a(e){const t={a:"a",br:"br",h2:"h2",p:"p",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.h2,{id:"system-exception",children:"System Exception"}),"\n",(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{children:"Exception"}),(0,r.jsx)(t.th,{children:"Condition"})]})}),(0,r.jsxs)(t.tbody,{children:[(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"AccessViolationException"}),(0,r.jsx)(t.td,{children:"It is thrown when try to read or write protected memory."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"AggregateException"}),(0,r.jsx)(t.td,{children:"Represents one or more errors that occur during application execution."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"AppDomainUnloadedException"}),(0,r.jsx)(t.td,{children:"It is thrown when try to access an unloaded application domain."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"ApplicationException"}),(0,r.jsx)(t.td,{children:"It is base class for application-defined exceptions."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"ArgumentException"}),(0,r.jsx)(t.td,{children:"It is thrown when invalid argument provided to a method."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"ArgumentNullException"}),(0,r.jsx)(t.td,{children:"It is thrown when a method requires argument but no argument is provided."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"ArgumentOutOfRangeException"}),(0,r.jsx)(t.td,{children:"It is thrown when value of an argument is outside the allowable range."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"ArithmeticException"}),(0,r.jsx)(t.td,{children:"It is thrown when doing arithmetic, casting, or conversion operation."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"ArrayTypeMismatchException"}),(0,r.jsx)(t.td,{children:"It is thrown when try to store an element of the wrong type within an array."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"BadImageFormatException"}),(0,r.jsx)(t.td,{children:"It is thrown when file image, dll or exe program is invalid."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"CannotUnloadAppDomainException"}),(0,r.jsx)(t.td,{children:"It is thrown when try to unload an application domain fails."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"ContextMarshalException"}),(0,r.jsx)(t.td,{children:"The exception that is thrown when an attempt to marshal an object across a context boundary fails."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"DataMisalignedException"}),(0,r.jsx)(t.td,{children:"It is thrown thrown when a unit of data is read from or written to an address that is not a multiple of the data size."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"DivideByZeroException"}),(0,r.jsx)(t.td,{children:"It is thrown when there is an attempt to divide an integral or decimal value by zero."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"DllNotFoundException"}),(0,r.jsx)(t.td,{children:"It is thrown when a DLL specified in a DLL import cannot be found."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"DuplicateWaitObjectException"}),(0,r.jsx)(t.td,{children:"The exception that is thrown when an object appears more than once in an array of synchronization objects."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"EntryPointNotFoundException"}),(0,r.jsx)(t.td,{children:"The exception that is thrown when an attempt to load a class fails due to the absence of an entry method."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"ExecutionEngineException"}),(0,r.jsx)(t.td,{children:"The exception that is thrown when there is an internal error in the execution engine of the common language runtime."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"FieldAccessException"}),(0,r.jsx)(t.td,{children:"It is thrown when there is an invalid attempt to access a private or protected field inside a class."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"FormatException"}),(0,r.jsx)(t.td,{children:"The exception that is thrown when the format of an argument is invalid, or when a composite format string is not well formed."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"IndexOutOfRangeException"}),(0,r.jsx)(t.td,{children:"The exception that is thrown when an attempt is made to access an element of an array or collection with an index that is outside its bounds."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"InsufficientMemoryException"}),(0,r.jsx)(t.td,{children:"The exception that is thrown when a check for sufficient available memory fails. This class cannot be inherited."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"InvalidCastException"}),(0,r.jsx)(t.td,{children:"The exception that is thrown for invalid casting or explicit conversion."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"InvalidOperationException"}),(0,r.jsx)(t.td,{children:"The exception that is thrown when a method call is invalid for the object's current state."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"InvalidProgramException"}),(0,r.jsx)(t.td,{children:"The exception that is thrown when a program contains invalid Microsoft intermediate language (MSIL) or metadata."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"InvalidTimeZoneException"}),(0,r.jsx)(t.td,{children:"The exception that is thrown when time zone information is invalid."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"MemberAccessException"}),(0,r.jsx)(t.td,{children:"The exception that is thrown when an attempt to access a class member fails."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"MethodAccessException"}),(0,r.jsx)(t.td,{children:"The exception that is thrown when there is an invalid attempt to access a method, such as accessing a private method from partially trusted code."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"MissingFieldException"}),(0,r.jsx)(t.td,{children:"The exception that is thrown when there is an attempt to dynamically access a field that does not exist."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"MissingMemberException"}),(0,r.jsx)(t.td,{children:"The exception that is thrown when there is an attempt to dynamically access a class member that does not exist."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"MissingMethodException"}),(0,r.jsx)(t.td,{children:"The exception that is thrown when there is an attempt to dynamically access a method that does not exist."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"MulticastNotSupportedException"}),(0,r.jsx)(t.td,{children:"The exception that is thrown when there is an attempt to combine two delegates based on the Delegate type instead of the MulticastDelegate type."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"NotCancelableException"}),(0,r.jsx)(t.td,{children:"It is thrown when an attempt is made to cancel an operation that is not cancelable."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"NotFiniteNumberException"}),(0,r.jsx)(t.td,{children:"The exception that is thrown when a floating-point value is positive infinity, negative infinity, or Not-a-Number (NaN)."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"NotImplementedException"}),(0,r.jsx)(t.td,{children:"The exception that is thrown when a requested method or operation is not implemented."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"NotSupportedException"}),(0,r.jsx)(t.td,{children:"The exception that is thrown when an invoked method is not supported, or when there is an attempt to read, seek, or write to a stream that does not support the invoked functionality."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"NullReferenceException"}),(0,r.jsx)(t.td,{children:"The exception that is thrown when there is an attempt to dereference a null object reference."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"ObjectDisposedException"}),(0,r.jsx)(t.td,{children:"The exception that is thrown when an operation is performed on a disposed object."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"OperationCanceledException"}),(0,r.jsx)(t.td,{children:"The exception that is thrown in a thread upon cancellation of an operation that the thread was executing."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"OutOfMemoryException"}),(0,r.jsx)(t.td,{children:"The exception that is thrown when there is not enough memory to continue the execution of a program."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"OverflowException"}),(0,r.jsx)(t.td,{children:"The exception that is thrown when an arithmetic, casting, or conversion operation in a checked context results in an overflow."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"PlatformNotSupportedException"}),(0,r.jsx)(t.td,{children:"The exception that is thrown when a feature does not run on a particular platform."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"RankException"}),(0,r.jsx)(t.td,{children:"The exception that is thrown when an array with the wrong number of dimensions is passed to a method."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"StackOverflowException"}),(0,r.jsx)(t.td,{children:"The exception that is thrown when the execution stack overflows because it contains too many nested method calls."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"SystemException"}),(0,r.jsx)(t.td,{children:"Serves as the base class for system exceptions namespace."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"TimeoutException"}),(0,r.jsx)(t.td,{children:"The exception that is thrown when the time allotted for a process or operation has expired."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"TimeZoneNotFoundException"}),(0,r.jsx)(t.td,{children:"The exception that is thrown when a time zone cannot be found."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"TypeAccessException"}),(0,r.jsx)(t.td,{children:"The exception that is thrown when a method attempts to use a type that it does not have access to."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"TypeInitializationException"}),(0,r.jsx)(t.td,{children:"The exception that is thrown as a wrapper around the exception thrown by the class initializer. This class cannot be inherited."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"TypeLoadException"}),(0,r.jsx)(t.td,{children:"The exception that is thrown when type-loading failures occur."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"TypeUnloadedException"}),(0,r.jsx)(t.td,{children:"The exception that is thrown when there is an attempt to access an unloaded class."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"UnauthorizedAccessException"}),(0,r.jsx)(t.td,{children:"The exception that is thrown when the operating system denies access because of an I/O error or a specific type of security error."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"UriFormatException"}),(0,r.jsx)(t.td,{children:"The exception that is thrown when an invalid Uniform Resource Identifier (URI) is detected."})]})]})]}),"\n",(0,r.jsx)(t.h2,{id:"systemdata-exception",children:"System.Data Exception"}),"\n",(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{children:"Exception"}),(0,r.jsx)(t.th,{children:"Condition"})]})}),(0,r.jsxs)(t.tbody,{children:[(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"ConstraintException"}),(0,r.jsx)(t.td,{children:"Represents the exception that is thrown when attempting an action that violates a constraint."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"DataException"}),(0,r.jsx)(t.td,{children:"Represents the exception that is thrown when attempting an action that violates a constraint."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"DBConcurrencyException"}),(0,r.jsx)(t.td,{children:"Gets or sets the value of the DataRow that generated the DBConcurrencyException."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"DeleteRowInaccessibleException"}),(0,r.jsx)(t.td,{children:"Represents the exception that is thrown when an action is tried on a DataRow that has been deleted."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"DuplicateNameException"}),(0,r.jsx)(t.td,{children:"Represents the exception that is thrown when a duplicate database object name is encountered during an add operation in a DataSet -related object."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"EvaluateException"}),(0,r.jsx)(t.td,{children:"Represents the exception that is thrown when the Expression property of a DataColumn cannot be evaluated."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"InRowChangingEventException"}),(0,r.jsx)(t.td,{children:"Represents the exception that is thrown when you call the EndEdit method within the RowChanging event."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"InvalidConstraintException"}),(0,r.jsx)(t.td,{children:"Represents the exception that is thrown when incorrectly trying to create or access a relation."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"InvalidExpressionException"}),(0,r.jsx)(t.td,{children:"Represents the exception that is thrown when you try to add a DataColumn that contains an invalid Expression to a DataColumnCollection."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"MissingPrimaryKeyException"}),(0,r.jsx)(t.td,{children:"Represents the exception that is thrown when you try to access a row in a table that has no primary key."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"NoNullAllowedException"}),(0,r.jsx)(t.td,{children:"Represents the exception that is thrown when you try to insert a null value into a column where AllowDBNull is set tofalse."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"OperationAbortedException"}),(0,r.jsx)(t.td,{children:"This exception is thrown when an ongoing operation is aborted by the user."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"ReadOnlyException"}),(0,r.jsx)(t.td,{children:"Represents the exception that is thrown when you try to change the value of a read-only column."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"RowNotInTableException"}),(0,r.jsx)(t.td,{children:"Represents the exception that is thrown when you try to perform an operation on a DataRow that is not in a DataTable."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"StrongTypingException"}),(0,r.jsx)(t.td,{children:"The exception that is thrown by a strongly typed DataSet when the user accesses a DBNull value."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"SyntaxErrorException"}),(0,r.jsx)(t.td,{children:"Represents the exception that is thrown when the Expression property of a DataColumn contains a syntax error."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"TypedDataSetGeneratorException"}),(0,r.jsx)(t.td,{children:"The exception that is thrown when a name conflict occurs while generating a strongly typed DataSet."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"VersionNotFoundException"}),(0,r.jsx)(t.td,{children:"Represents the exception that is thrown when you try to return a version of a DataRow that has been deleted."})]})]})]}),"\n",(0,r.jsx)(t.h2,{id:"systemio-exception",children:"System.IO Exception"}),"\n",(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{children:"Exception"}),(0,r.jsx)(t.th,{children:"Condition"})]})}),(0,r.jsxs)(t.tbody,{children:[(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"DirectoryNotFoundException"}),(0,r.jsx)(t.td,{children:"The exception that is thrown when part of a file or directory cannot be found."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"DriveNotFoundException"}),(0,r.jsx)(t.td,{children:"The exception that is thrown when a drive that is referenced by an operation could not be found."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"EndOfStreamException"}),(0,r.jsx)(t.td,{children:"An EndOfStreamException exception is thrown when there is an attempt to read past the end of a stream."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"FileFormatException"}),(0,r.jsx)(t.td,{children:"The exception that is thrown when an input file or a data stream that is supposed to conform to a certain file format specification is malformed."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"FileLoadException"}),(0,r.jsx)(t.td,{children:"The exception that is thrown when a managed assembly is found but cannot be loaded."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"FileNotFoundException"}),(0,r.jsx)(t.td,{children:"The exception that is thrown when an attempt to access a file that does not exist on disk fails."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"InternalBufferOverflowException"}),(0,r.jsx)(t.td,{children:"The exception thrown when the internal buffer overflows."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"InvalidDataException"}),(0,r.jsx)(t.td,{children:"The exception that is thrown when a data stream is in an invalid format."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"IOException"}),(0,r.jsx)(t.td,{children:"The exception that is thrown when an I/O error occurs."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"PathTooLongException"}),(0,r.jsx)(t.td,{children:"The exception that is thrown when a path or file name is longer than the system-defined maximum length."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"PipeException"}),(0,r.jsx)(t.td,{children:"Thrown when an error occurs within a named pipe."})]})]})]}),"\n",(0,r.jsx)(t.h2,{id:"related-links",children:"Related Links"}),"\n",(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.a,{href:"https://learn.microsoft.com/en-us/dotnet/csharp/fundamentals/exceptions/",children:"Exceptions and Exception Handling - C# | Microsoft Learn"}),(0,r.jsx)(t.br,{}),"\n",(0,r.jsx)(t.a,{href:"https://www.geeksforgeeks.org/c-sharp-exception/",children:"C# Exceptions - GeeksforGeeks"})]})]})}function l(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(a,{...e})}):a(e)}}}]);