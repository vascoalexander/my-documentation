"use strict";(self.webpackChunkmy_documentation=self.webpackChunkmy_documentation||[]).push([[1898],{64453:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>c,default:()=>d,frontMatter:()=>a,metadata:()=>r,toc:()=>l});const r=JSON.parse('{"id":"Csharp/Classes-OOP/Struct","title":"Struct","description":"","source":"@site/docs/04-Csharp/04-Classes-OOP/04-Struct.md","sourceDirName":"04-Csharp/04-Classes-OOP","slug":"/Csharp/Classes-OOP/Struct","permalink":"/my-documentation/docs/Csharp/Classes-OOP/Struct","draft":false,"unlisted":false,"editUrl":"https://github.com/vascoalexander/my-documentation/tree/main/docs/04-Csharp/04-Classes-OOP/04-Struct.md","tags":[],"version":"current","sidebarPosition":4,"frontMatter":{"created":"2025-02-23, 11:33","title":"Struct","description":"","language":"C#","sidebar_position":4,"tags":[]},"sidebar":"csharpSidebar","previous":{"title":"Access Modifiers","permalink":"/my-documentation/docs/Csharp/Classes-OOP/Access-Modifier"},"next":{"title":"Interfaces","permalink":"/my-documentation/docs/Csharp/Classes-OOP/Inferfaces"}}');var s=n(74848),i=n(28453);const a={created:"2025-02-23, 11:33",title:"Struct",description:"",language:"C#",sidebar_position:4,tags:[]},c=void 0,o={},l=[{value:"2D Koordinaten",id:"2d-koordinaten",level:2},{value:"Farbe (mit Auto-Properties)",id:"farbe-mit-auto-properties",level:2},{value:"Related Links",id:"related-links",level:2}];function u(e){const t={a:"a",code:"code",h2:"h2",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.p,{children:"Ein struct ist ein Werttyp in C#, der \xe4hnlich wie eine Klasse (class) funktioniert, aber in vielen F\xe4llen effizienter ist."}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.strong,{children:"Wann struct statt class?"})}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:"Klein & einfach \u2192 struct"}),"\n",(0,s.jsx)(t.li,{children:"Mutable & komplex \u2192 class"}),"\n",(0,s.jsx)(t.li,{children:"Vererbung notwendig? \u2192 class"}),"\n",(0,s.jsx)(t.li,{children:"H\xe4ufige \xc4nderungen der Daten? \u2192 class"}),"\n",(0,s.jsx)(t.li,{children:"Performance-kritisch? \u2192 struct"}),"\n"]}),"\n",(0,s.jsx)(t.h2,{id:"2d-koordinaten",children:"2D Koordinaten"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-c",children:'// Punkt speichert zwei Werte direkt im Stack \u2192 schneller als eine Klasse.\n// Strukturen sind perfekt f\xfcr einfache Datencontainer.\n\nstruct Punkt\n{\n\tpublic int X;\n\tpublic int Y;\n\n\tpublic Punkt(int x, int y)\n\t{\n\t\tX = x;\n\t\tY = y;\n\t}\n\n\tpublic void Anzeigen()\n\t{\n\t\tConsole.WriteLine($"Punkt: ({X}, {Y})");\n\t}\n}\n\nclass Program\n{\n\tstatic void Main()\n\t{\n\t\tPunkt p1 = new Punkt(10, 20);\n\t\tp1.Anzeigen(); // Ausgabe: Punkt: (10, 20)\n\t}\n}\n'})}),"\n",(0,s.jsx)(t.hr,{}),"\n",(0,s.jsx)(t.h2,{id:"farbe-mit-auto-properties",children:"Farbe (mit Auto-Properties)"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-c",children:'// Farbe ist ein idealer Kandidat f\xfcr struct, da es nur Daten speichert.\n// Auto-Properties ({ get; }) machen es unver\xe4nderlich (immutable), was in vielen Szenarien n\xfctzlich ist.\n\nstruct Farbe\n{\n\tpublic byte Rot { get; }\n\tpublic byte Gr\xfcn { get; }\n\tpublic byte Blau { get; }\n\n\tpublic Farbe(byte rot, byte gr\xfcn, byte blau)\n\t{\n\t\tRot = rot;\n\t\tGr\xfcn = gr\xfcn;\n\t\tBlau = blau;\n\t}\n\n\tpublic override string ToString()\n\t{\n\t\treturn $"RGB({Rot}, {Gr\xfcn}, {Blau})";\n\t}\n}\n\nclass Program\n{\n\tstatic void Main()\n\t{\n\t\tFarbe rot = new Farbe(255, 0, 0);\n\t\tConsole.WriteLine(rot); // Ausgabe: RGB(255, 0, 0)\n\t}\n}\n'})}),"\n",(0,s.jsx)(t.h2,{id:"related-links",children:"Related Links"}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.a,{href:"https://learn.microsoft.com/en-us/dotnet/csharp/language-reference/builtin-types/struct",children:(0,s.jsx)(t.strong,{children:"Microsoft Docs - Structure Types"})})})]})}function d(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(u,{...e})}):u(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>a,x:()=>c});var r=n(96540);const s={},i=r.createContext(s);function a(e){const t=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),r.createElement(i.Provider,{value:t},e.children)}}}]);