"use strict";(self.webpackChunkmy_documentation=self.webpackChunkmy_documentation||[]).push([[4967],{62678:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>a,contentTitle:()=>r,default:()=>o,frontMatter:()=>s,metadata:()=>l,toc:()=>c});const l=JSON.parse('{"id":"Code/CSharp/Strings/DateTime Struct","title":"DateTime Struct","description":"","source":"@site/docs/09-Code/01-CSharp/02-Strings/DateTime Struct.md","sourceDirName":"09-Code/01-CSharp/02-Strings","slug":"/Code/CSharp/Strings/DateTime Struct","permalink":"/my-documentation/docs/Code/CSharp/Strings/DateTime Struct","draft":false,"unlisted":false,"editUrl":"https://github.com/vascoalexander/my-documentation/tree/main/docs/09-Code/01-CSharp/02-Strings/DateTime Struct.md","tags":[],"version":"current","frontMatter":{"created":"2025-02-24, 07:00","description":"","language":"C#","tags":[]},"sidebar":"codeSidebar","previous":{"title":"Strings","permalink":"/my-documentation/docs/category/strings"},"next":{"title":"Format Specifiers","permalink":"/my-documentation/docs/Code/CSharp/Strings/Format Specifiers"}}');var i=n(74848),d=n(28453);const s={created:"2025-02-24, 07:00",description:"",language:"C#",tags:[]},r=void 0,a={},c=[{value:"DateTime Constructor",id:"datetime-constructor",level:3},{value:"DateTime Methods",id:"datetime-methods",level:3},{value:"DateTime Properties",id:"datetime-properties",level:3},{value:"DayOfWeek",id:"dayofweek",level:3},{value:"DateTime Formatting",id:"datetime-formatting",level:3},{value:"Timezone Object",id:"timezone-object",level:3},{value:"DateTime with Different Culture",id:"datetime-with-different-culture",level:3},{value:"Related Links",id:"related-links",level:3}];function x(e){const t={a:"a",code:"code",h3:"h3",hr:"hr",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,d.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.h3,{id:"datetime-constructor",children:"DateTime Constructor"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-c",children:"// DateTime(year, month, day) \nDateTime date1 = new DateTime(2025, 12, 25); Console.WriteLine(date1.ToString()); \n// Ausgabe: 12/25/2015 12:00:00 AM \n\n// DateTime(year, month, day, hour, minute, second)\nDateTime date2 = new DateTime(2022, 12, 25, 10, 30, 50); Console.WriteLine(date1.ToString());\n// Ausgabe: 12/25/2015 10:30:00 AM }\n"})}),"\n",(0,i.jsx)(t.hr,{}),"\n",(0,i.jsx)(t.h3,{id:"datetime-methods",children:"DateTime Methods"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-c",children:'// Creating TimeSpan object of one month(as 30 days)  \nTimeSpan duration = new System.TimeSpan(30, 0, 0, 0);  \nDateTime newDate1 = DateTime.Now.Add(duration);  \nConsole.WriteLine(newDate1);\n\n// AddYears, AddMonths, AddDays, AddHours, AddMinutes, AddSeconds  \nDateTime today = DateTime.Now;\nDateTime newDate2 = today.AddDays(3);\nConsole.WriteLine(newDate2);\n\n// DateTime Parse\nstring dateString = "Wed Dec 30, 2015";  \nDateTime dateTime12 = DateTime.Parse(dateString); // 12/30/2015 12:00:00 AM  \n  \n// Date Difference  \nSystem.DateTime date1 = new System.DateTime(2025, 3, 10, 2, 15, 10);  \nSystem.DateTime date2 = new System.DateTime(2025, 7, 15, 6, 30, 20);  \nSystem.DateTime date3 = new System.DateTime(2025, 12, 28, 10, 45, 30);\n\nSystem.TimeSpan diff1 = date2.Subtract(date1);\nSystem.DateTime date4 = date3.Subtract(diff1);  \nSystem.TimeSpan diff2 = date3 - date2;\nSystem.DateTime date5 = date2 - diff1;\n'})}),"\n",(0,i.jsx)(t.hr,{}),"\n",(0,i.jsx)(t.h3,{id:"datetime-properties",children:"DateTime Properties"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-c",children:"DateTime myDate = new DateTime(2025, 12, 25, 10, 30, 45);  \nint year = myDate.Year;              // 2015  \nint month = myDate.Month;            // 12  \nint day = myDate.Day;                // 25  \nint hour = myDate.Hour;              // 10  \nint minute = myDate.Minute;          // 30  \nint second = myDate.Second;          // 45  \n\n"})}),"\n",(0,i.jsx)(t.hr,{}),"\n",(0,i.jsx)(t.h3,{id:"dayofweek",children:"DayOfWeek"}),"\n",(0,i.jsx)(t.p,{children:"It specifies day of the week like Sunday, Monday etc. It is an enum which starts from Sunday to Saturday. If you cast the weekofday value to integer then it starts from Zero (0) for Sunday to Six (6) for Saturday."}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-c",children:"DateTime myDate = new DateTime(2025, 12, 25, 10, 30, 45);\nint weekDay = (int)myDate.DayOfWeek; // 4 (numeric value of weekday)\nstring weekDay2 = myDate.DayOfWeek.ToString(); // name of day (Thursday)\n\nDateTime dt = new DateTime(2015, 12, 25);\nbool isEqual = dt.DayOfWeek == DayOfWeek.Thursday); // False\nbool isEqual = dt.DayOfWeek == DayOfWeek.Friday); // True\n"})}),"\n",(0,i.jsx)(t.hr,{}),"\n",(0,i.jsx)(t.h3,{id:"datetime-formatting",children:"DateTime Formatting"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-c",children:'DateTime tempDate = new DateTime(2025, 2, 24);\nConsole.WriteLine(tempDate.ToString("MMMM dd, yyyy"));\n'})}),"\n",(0,i.jsxs)(t.table,{children:[(0,i.jsx)(t.thead,{children:(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.th,{style:{textAlign:"left"},children:"Specifier"}),(0,i.jsx)(t.th,{style:{textAlign:"left"},children:"Description"}),(0,i.jsx)(t.th,{style:{textAlign:"left"},children:"Output"})]})}),(0,i.jsxs)(t.tbody,{children:[(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"d"}),(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"Short Date"}),(0,i.jsx)(t.td,{style:{textAlign:"left"},children:(0,i.jsx)(t.code,{children:"12/8/2015"})})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"D"}),(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"Long Date"}),(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"Tuesday, December 08, 2015"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"t"}),(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"Short Time"}),(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"3:15 PM"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"T"}),(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"Long Time"}),(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"3:15:19 PM"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"f"}),(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"Full date and time"}),(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"Tuesday, December 08, 2015 3:15 PM"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"F"}),(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"Full date and time (long)"}),(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"Tuesday, December 08, 2015 3:15:19 PM"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"g"}),(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"Default date and time"}),(0,i.jsx)(t.td,{style:{textAlign:"left"},children:(0,i.jsx)(t.code,{children:"12/8/2015 15:15"})})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"G"}),(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"Default date and time (long)"}),(0,i.jsx)(t.td,{style:{textAlign:"left"},children:(0,i.jsx)(t.code,{children:"12/8/2015 15:15"})})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"M"}),(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"Day / Month"}),(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"8-Dec"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"r"}),(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"RFC1123 date"}),(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"Tue, 08 Dec 2015 15:15:19 GMT"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"s"}),(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"Sortable date/time"}),(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"2015-12-08T15:15:19"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"u"}),(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"Universal time, local timezone"}),(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"2015-12-08 15:15:19Z"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"Y"}),(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"Month / Year"}),(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"December, 2015"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"dd"}),(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"Day"}),(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"8"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"ddd"}),(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"Short Day Name"}),(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"Tue"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"dddd"}),(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"Full Day Name"}),(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"Tuesday"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"hh"}),(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"2 digit hour"}),(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"3"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"HH"}),(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"2 digit hour (24 hour)"}),(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"15"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"mm"}),(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"2 digit minute"}),(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"15"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"MM"}),(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"Month"}),(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"12"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"MMM"}),(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"Short Month name"}),(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"Dec"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"MMMM"}),(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"Month name"}),(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"December"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"ss"}),(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"seconds"}),(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"19"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"fff"}),(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"milliseconds"}),(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"120"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"FFF"}),(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"milliseconds without trailing zero"}),(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"12"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"tt"}),(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"AM/PM"}),(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"PM"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"yy"}),(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"2 digit year"}),(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"15"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"yyyy"}),(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"4 digit year"}),(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"2015"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{style:{textAlign:"left"},children:":"}),(0,i.jsxs)(t.td,{style:{textAlign:"left"},children:["Hours, minutes, seconds separator, e.g. ",(0,i.jsx)(t.code,{children:"{0:hh:mm:ss}"})]}),(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"9:08:59"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{style:{textAlign:"left"},children:"/"}),(0,i.jsxs)(t.td,{style:{textAlign:"left"},children:["Year, month , day separator, e.g. ",(0,i.jsx)(t.code,{children:"{0:dd/MM/yyyy}"})]}),(0,i.jsx)(t.td,{style:{textAlign:"left"},children:(0,i.jsx)(t.code,{children:"8/4/2007"})})]})]})]}),"\n",(0,i.jsx)(t.hr,{}),"\n",(0,i.jsx)(t.h3,{id:"timezone-object",children:"Timezone Object"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-c",children:'// Get current Time Zone  \nstring current = TimeZone.CurrentTimeZone.StandardName;  \nConsole.WriteLine(current);  \n  \n// Get All Time Zones  \nforeach (TimeZoneInfo z in TimeZoneInfo.GetSystemTimeZones())  \n{  \n    Console.WriteLine(z.Id);  \n}\n\n//Convert any date from your time-zone to UTC\nDateTime timeUTC = TimeZone.CurrentTimeZone.ToUniversalTime(DateTime.Now);  \nConsole.WriteLine(timeUTC);\n\n// Zeit in spezifischer Zeitzone ermitteln\nTimeZoneInfo nzTimeZone = TimeZoneInfo.FindSystemTimeZoneById("New Zealand Standard Time");  \nDateTime nzTime = TimeZoneInfo.ConvertTimeFromUtc(DateTime.UtcNow, nzTimeZone);\n\nConsole.WriteLine($"Aktuelle Zeit in Neuseeland: {nzTime}");\n'})}),"\n",(0,i.jsx)(t.h3,{id:"datetime-with-different-culture",children:"DateTime with Different Culture"}),"\n",(0,i.jsx)(t.h3,{id:"related-links",children:"Related Links"}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.a,{href:"https://www.csharp.com/article/datetime-in-c-sharp/",children:"DateTime In C#"})})]})}function o(e={}){const{wrapper:t}={...(0,d.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(x,{...e})}):x(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>s,x:()=>r});var l=n(96540);const i={},d=l.createContext(i);function s(e){const t=l.useContext(d);return l.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:s(e.components),l.createElement(d.Provider,{value:t},e.children)}}}]);