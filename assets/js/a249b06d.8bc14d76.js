"use strict";(self.webpackChunkmy_documentation=self.webpackChunkmy_documentation||[]).push([[1955],{2794:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>o,contentTitle:()=>l,default:()=>h,frontMatter:()=>d,metadata:()=>t,toc:()=>a});const t=JSON.parse('{"id":"Web/Netzwerke/Transport-Layer","title":"Transport Layer","description":"","source":"@site/docs/06-Web/01-Netzwerke/05-Transport-Layer.md","sourceDirName":"06-Web/01-Netzwerke","slug":"/Web/Netzwerke/Transport-Layer","permalink":"/my-documentation/docs/Web/Netzwerke/Transport-Layer","draft":false,"unlisted":false,"editUrl":"https://github.com/vascoalexander/my-documentation/tree/main/docs/06-Web/01-Netzwerke/05-Transport-Layer.md","tags":[],"version":"current","sidebarPosition":5,"frontMatter":{"description":"","title":"Transport Layer"},"sidebar":"webSidebar","previous":{"title":"Network Layer","permalink":"/my-documentation/docs/Web/Netzwerke/Network-Layer"},"next":{"title":"Application Layer","permalink":"/my-documentation/docs/Web/Netzwerke/Application-Layer"}}');var i=r(74848),s=r(28453);const d={description:"",title:"Transport Layer"},l=void 0,o={},a=[{value:"Protokolle des Transportsystems",id:"protokolle-des-transportsystems",level:2},{value:"Merkmale TCP und UDP",id:"merkmale-tcp-und-udp",level:3},{value:"User Datagram Protocol (UDP)",id:"user-datagram-protocol-udp",level:2},{value:"Transport Control Protocol (TCP)",id:"transport-control-protocol-tcp",level:2},{value:"Flags",id:"flags",level:3},{value:"TCP-Handshake",id:"tcp-handshake",level:3},{value:"TCP-Paketformat",id:"tcp-paketformat",level:3},{value:"Ports",id:"ports",level:2},{value:"Well Known Ports",id:"well-known-ports",level:3}];function c(e){const n={br:"br",h2:"h2",h3:"h3",img:"img",li:"li",ol:"ol",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h2,{id:"protokolle-des-transportsystems",children:"Protokolle des Transportsystems"}),"\n",(0,i.jsx)(n.p,{children:"Innerhalb der TCP/IP-Protokollfamilie existieren die beiden Protokolle UDP und TCP als m\xf6gliche Vertreter der Transportschicht. UDP ist verbindungslos w\xe4hrend TCP im Gegensatz dazu eine verbindungsorientierte Kommunikation darstellt."}),"\n",(0,i.jsxs)(n.p,{children:["Eine ",(0,i.jsx)(n.strong,{children:"verbindungsorientierte Kommunikation"})," ist durch das Vorhandensein eines Kommunikationskanals gekennzeichnet. Es wird \xfcberpr\xfcft, ob die Datenpakete unbesch\xe4digt und in der richtigen Reihenfolge beim Empf\xe4nger eintreffen. Eine verbindungsorientierte Kommunikation wird h\xe4ufig auch als leitungsvermittelte Kommunikation bezeichnet. (bsp. Telefon)"]}),"\n",(0,i.jsxs)(n.p,{children:["Bei einer ",(0,i.jsx)(n.strong,{children:"verbindungslosen Kommunikation"})," existiert kein Kommunikationskanal zwischen Sender und Empf\xe4nger. Der Sender sendet seine Nachrichten ohne sicher zu sein, ob der Empf\xe4nger \xfcberhaupt existiert bzw. die Datenpakte ordnungsgem\xe4\xdf dort ankommen. Eine verbindungslose Kommunikation wird h\xe4ufig auch als paketvermittelte Kommunikation bezeichnet. (bsp. Post)"]}),"\n",(0,i.jsx)(n.h3,{id:"merkmale-tcp-und-udp",children:"Merkmale TCP und UDP"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"TCP"}),(0,i.jsx)(n.th,{children:"UDP"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"verbindungsorientiert"}),(0,i.jsx)(n.td,{children:"verbindungslos"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"zuverl\xe4ssig"}),(0,i.jsx)(n.td,{children:"unzuverl\xe4ssig"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Unterteilung in Segmente"}),(0,i.jsx)(n.td,{children:"Unterteilung in Datagramme"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Reihenfolge der Segmente wird eingehalten"}),(0,i.jsx)(n.td,{children:"Reihenfolge wird nicht \xfcberpr\xfcft"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"sendet nicht empfangene Daten erneut"}),(0,i.jsx)(n.td,{children:"verwendet keine Flusskontrolle"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"langer Header (20-60 Byte)"}),(0,i.jsx)(n.td,{children:"kurzer Header (8 Byte)"})]})]})]}),"\n",(0,i.jsx)(n.h2,{id:"user-datagram-protocol-udp",children:"User Datagram Protocol (UDP)"}),"\n",(0,i.jsx)(n.p,{children:"Da das User Datagram Protocol1 (UDP, RFC 768) ein verbindungsloses Protokoll ist, gew\xe4hrleistet es nicht das ordnungsgem\xe4\xdfe Erreichen der Datenpakete beim Empf\xe4nger. Es \xfcbernimmt auch keine Garantie f\xfcr die korrekte Reihenfolge der Pakete. So kann es z.B. vorkommen, dass zwei nacheinander versendete Datenpakete in Abh\xe4ngigkeit des momentanen Verkehrsaufkommens unterschiedliche Wege im Internet verwenden. Das zweite Datenpaket k\xf6nnte somit vor dem ersten beim Empf\xe4nger eintreffen. Da UDP hier im Gegensatz zu TCP keinerlei Schutzmechanismen vorsieht, bezeichnet man UDP auch als unsicheres Protokoll. Die maximale L\xe4nge eines UDP-Datagramms betr\xe4gt 65 535 Byte."}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{alt:"UDP Header",src:r(93998).A+"",width:"1058",height:"235"})}),"\n",(0,i.jsx)(n.h2,{id:"transport-control-protocol-tcp",children:"Transport Control Protocol (TCP)"}),"\n",(0,i.jsxs)(n.p,{children:["Die Hauptaufgabe des Transport Control Protocol besteht in der Bereitstellung eines ",(0,i.jsx)(n.strong,{children:"zuverl\xe4ssigen Transportes"})," von Daten durch das Netzwerk. Zuverl\xe4ssige \xdcbertragung bedeutet, dass die von einem Rechner verschickten Datenpakete entweder beim Empf\xe4nger eintreffen oder der Sender anderenfalls eine ",(0,i.jsx)(n.strong,{children:"Fehlermeldung"})," erh\xe4lt. Ein Paket wird so lange immer wieder gesendet, bis der Empf\xe4nger den Empfang quittiert hat."]}),"\n",(0,i.jsx)(n.p,{children:"TCP unterst\xfctzt die Funktionen der Transportschicht und stellt vor der Daten\xfcbertragung eine gesicherte Verbindung zwischen den beteiligten Stationen her."}),"\n",(0,i.jsxs)(n.p,{children:["TCP ist ",(0,i.jsx)(n.strong,{children:"verbindungsorientiert"}),", d. h. es muss gew\xe4hrleistet sein, dass die Datenpakete in genau derselben Reihenfolge beim Empf\xe4nger eintreffen, wie sie vom Sender verschickt wurden. Dies geschieht bei TCP \xfcber Sequenznummern. Jedes gesendete Paket erh\xe4lt hierbei eine Nummer, die in Abh\xe4ngigkeit der Reihenfolge des Sendens vergeben wird. Auf der Empf\xe4ngerseite werden die Pakete dann entsprechend ihrer Nummern wieder zusammengesetzt. Fehlt zwischendurch ein Datenpaket, wartet TCP solange, bis entweder das Paket eingetroffen ist oder eine maximale Wartezeit erreicht wird. Das Ablaufen dieser Wartezeit f\xfchrt dann zur \xdcbermittlung einer Fehlermeldung an den Sender. Diese Vorgehensweise dient bei TCP der Realisierung einer Flusskontrolle."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Acknowledgement Number"}),(0,i.jsx)(n.br,{}),"\n","Enth\xe4lt die Sequenznummer, die als n\xe4chstes erwartet wird. Gewaehrleistet, das kein Segement verloren geht."]}),"\n",(0,i.jsx)(n.h3,{id:"flags",children:"Flags"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"ACK"})," - mit der Acknowledgement Number wird die Daten\xfcbertragung von Segmenten \xfcber TCP best\xe4tigt. Ack-Number ist nur g\xfcltig wenn Ack-Flag gesetzt ist."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"SYN"})," - Wird in einem TCP-Segment gesetzt um eine Verbindung zu initiieren. Synchronisierung der Sequenznummer beim Verbindungsaufbau."]}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.strong,{children:"Reset"})}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Unter Flusskontrolle versteht man einen Mechanismus zur Steuerung des Nachrichtenflusses. Damit wird gew\xe4hrleistet, dass ein Sender mit hoher Verarbeitungsgeschwindigkeit nicht mehr Daten \xfcbermittelt, als ein langsamerer Empf\xe4nger verarbeiten kann."}),"\n",(0,i.jsx)(n.h3,{id:"tcp-handshake",children:"TCP-Handshake"}),"\n",(0,i.jsx)(n.p,{children:"Der TCP-Handshake (auch Three-Way-Handshake) ist ein Prozess zur Verbindungsaufnahme zwischen zwei Hosts \xfcber das Transmission Control Protocol (TCP). Er stellt sicher, dass beide Seiten bereit sind, Daten zu senden und zu empfangen, und dient zur Synchronisation von Sequenznummern."}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Ablauf des TCP-Handshakes"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"1. SYN \u2013 Verbindungsanfrage"}),(0,i.jsx)(n.br,{}),"\n","Der Client sendet ein TCP-Segment an den Server mit:"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"dem SYN-Flag gesetzt (Synchronize),"}),"\n",(0,i.jsx)(n.li,{children:"einer Initial Sequence Number (ISN), z.B. x."}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Ziel"}),": Den Wunsch zur Verbindung signalisieren und die eigene Sequenznummer \xfcbermitteln."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"2. SYN-ACK \u2013 Verbindungsannahme"}),(0,i.jsx)(n.br,{}),"\n","Der Server antwortet mit einem TCP-Segment, das:"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"sowohl das SYN- als auch das ACK-Flag gesetzt hat,"}),"\n",(0,i.jsx)(n.li,{children:"seine eigene Initial Sequence Number (ISN) y enth\xe4lt,"}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"und ein ACK f\xfcr x+1 sendet."}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Ziel"}),": Den Verbindungswunsch akzeptieren und die eigene Sequenznummer mitteilen."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"3. ACK \u2013 Best\xe4tigung"}),(0,i.jsx)(n.br,{}),"\n","Der Client best\xe4tigt die Sequenznummer des Servers mit:"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"einem Segment, bei dem nur das ACK-Flag gesetzt ist,"}),"\n",(0,i.jsx)(n.li,{children:"einem ACK f\xfcr y+1."}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Ziel"}),": Die Verbindung ist nun vollst\xe4ndig aufgebaut."]}),"\n",(0,i.jsx)(n.h3,{id:"tcp-paketformat",children:"TCP-Paketformat"}),"\n",(0,i.jsx)(n.p,{children:"Die Dateneinheiten, die zwischen dem Sender und dem Empf\xe4nger ausgetauscht werden, hei\xdfen Segmente. Ein TCP-Segment besteht aus einem Protokollkopf (TCP-Header, L\xe4nge zwischen 20 und 60 Byte) und den Nutzdaten. Die maximale Segmentgr\xf6\xdfe von 65 535 Byte wird durch zwei Faktoren begrenzt:"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:"Das Segment darf nur so gro\xdf sein, dass es noch von dem Protokoll der darunterliegenden Schicht (IP) aufgenommen werden kann."}),"\n",(0,i.jsx)(n.li,{children:"Das Segment muss in die \u201eMaximum Transfer Unit\u201c des jeweiligen Netzes passen."}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{alt:"TCP Header",src:r(53302).A+"",width:"1068",height:"464"})}),"\n",(0,i.jsxs)(n.p,{children:["Die ",(0,i.jsx)(n.strong,{children:"MTU"})," wird von der dem Netz zugrunde gelegten Technologie bestimmt. Bei Verwendung von Ethernet betr\xe4gt die MTU z. B. 1500 Oktett, bei ATM 4500 Oktett."]}),"\n",(0,i.jsxs)(n.p,{children:["Die ",(0,i.jsx)(n.strong,{children:"maximale Segmentgr\xf6\xdfe (MSS)"})," ist ein Parameter im Optionsfeld des TCP-Headers. Er gibt die gr\xf6\xdfte Datenmenge (in Bytes) an, die ein Computer oder Kommunikationsger\xe4t in einem einzelnen TCP-Segment empfangen kann. Der TCP-Header oder der IP-Header werden dabei nicht mitgez\xe4hlt (im Gegensatz beispielsweise zur MTU f\xfcr IP-Datagramme). Das IP-Datagramm, das ein TCP-Segment enth\xe4lt, kann in einem einzigen Paket abgeschlossen sein oder aus mehreren fragmentierten Teilen rekonstruiert werden; in jedem Fall gilt die MSS-Begrenzung f\xfcr die Gesamtdatenmenge im endg\xfcltigen, rekonstruierten TCP-Segment."]}),"\n",(0,i.jsx)(n.h2,{id:"ports",children:"Ports"}),"\n",(0,i.jsx)(n.p,{children:"Mithilfe von Portnummern wird die Verbindung zu Diensten auf vernetzten Stationen hergestellt."}),"\n",(0,i.jsx)(n.p,{children:"Ein Rechner bietet innerhalb eines Netzwerkes h\xe4ufig mehrere Dienste an wie z. B. den Datenaustausch mit anderen Rechnern (FTP) und den Empfang von E-Mails (POP oder IMAP). Da der Rechner jedoch lediglich unter einer einzigen Adresse im Netz erreichbar ist, muss \xfcber eine zus\xe4tzliche Kennung deutlich gemacht werden, welcher dieser Dienste konkret angesprochen werden soll. Dieses erfolgt mit Hilfe von Portnummern, die jedem Dienst zugewiesen werden."}),"\n",(0,i.jsx)(n.p,{children:"Bei den Portnummern handelt es sich um 16-Bit-Werte, also Zahlen zwischen 0 und 65535, die von der IANA (Internet Assigned Numbers Authority) festgelegt sind."}),"\n",(0,i.jsx)(n.p,{children:"Der gesamte Portnummernbereich ist in drei Ebenen unterteilt:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Well-Known-Ports (Portnummern 0 bis 1023)"}),": Diese Portnummern sind f\xfcr systemnahe Dienste reserviert, d. h. Dienste, die aus Sicherheitsgr\xfcnden nur vom Systemadministrator gestartet werden d\xfcrfen. So kann z. B. Telnet (Portnummer 23) mit der M\xf6glichkeit des Zugriffs auf den eigenen Rechner \xfcber das Netz nur vom Systemadministrator freigegeben werden."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Registered Ports (Portnummern 1024 bis 49151)"}),": Hiermit werden Dienste gekennzeichnet, die offiziell bei der IANA angemeldet wurden. Registered Ports sollten nicht f\xfcr selbst entwickelte Anwendungen verwendet werden."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Private Ports (Portnummern 49152 bis 65535)"}),": Private Ports k\xf6nnen f\xfcr beliebige Dienste wie z. B. selbst entwickelte Applikationen verwendet werden."]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"well-known-ports",children:"Well Known Ports"}),"\n",(0,i.jsx)(n.p,{children:"(0-1023)"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Port Number"}),(0,i.jsx)(n.th,{children:"Service name"}),(0,i.jsx)(n.th,{children:"Transport protocol"}),(0,i.jsx)(n.th,{children:"Description"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:"7"})}),(0,i.jsx)(n.td,{children:"Echo"}),(0,i.jsx)(n.td,{children:"TCP, UDP"}),(0,i.jsx)(n.td,{children:"Echo service"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:"20"})}),(0,i.jsx)(n.td,{children:"FTP-data"}),(0,i.jsx)(n.td,{children:"TCP, SCTP"}),(0,i.jsx)(n.td,{children:"File Transfer Protocol data transfer"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:"21"})}),(0,i.jsx)(n.td,{children:"FTP"}),(0,i.jsx)(n.td,{children:"TCP, UDP, SCTP"}),(0,i.jsx)(n.td,{children:"File Transfer Protocol (FTP) control connection"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:"22"})}),(0,i.jsx)(n.td,{children:"SSH-SCP"}),(0,i.jsx)(n.td,{children:"TCP, UDP, SCTP"}),(0,i.jsx)(n.td,{children:"Secure Shell, secure logins, file transfers (scp, sftp), and port forwarding"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:"23"})}),(0,i.jsx)(n.td,{children:"Telnet"}),(0,i.jsx)(n.td,{children:"TCP"}),(0,i.jsx)(n.td,{children:"Telnet protocol\u2014unencrypted text communications"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:"25"})}),(0,i.jsx)(n.td,{children:"SMTP"}),(0,i.jsx)(n.td,{children:"TCP"}),(0,i.jsx)(n.td,{children:"Simple Mail Transfer Protocol, used for email routing between mail servers"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:"53"})}),(0,i.jsx)(n.td,{children:"DNS"}),(0,i.jsx)(n.td,{children:"TCP, UDP"}),(0,i.jsx)(n.td,{children:"Domain Name System name resolver"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:"80"})}),(0,i.jsx)(n.td,{children:"HTTP"}),(0,i.jsx)(n.td,{children:"TCP, UDP, SCTP"}),(0,i.jsx)(n.td,{children:"Hypertext Transfer Protocol (HTTP) uses TCP in versions 1.x and 2. HTTP/3 uses QUIC, a transport protocol on top of UDP"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:"88"})}),(0,i.jsx)(n.td,{children:"Kerberos"}),(0,i.jsx)(n.td,{children:"TCP, UDP"}),(0,i.jsx)(n.td,{children:"Network authentication system"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:"110"})}),(0,i.jsx)(n.td,{children:"POP3"}),(0,i.jsx)(n.td,{children:"TCP"}),(0,i.jsx)(n.td,{children:"Post Office Protocol, version 3 (POP3)"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:"139"})}),(0,i.jsx)(n.td,{children:"NetBIOS-ssn"}),(0,i.jsx)(n.td,{children:"TCP, UDP"}),(0,i.jsx)(n.td,{children:"NetBIOS Session Service"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:"143"})}),(0,i.jsx)(n.td,{children:"IMAP4"}),(0,i.jsx)(n.td,{children:"TCP, UDP"}),(0,i.jsx)(n.td,{children:"Internet Message Access Protocol (IMAP), management of electronic mail messages on a server"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:"443"})}),(0,i.jsx)(n.td,{children:"HTTP over SSL"}),(0,i.jsx)(n.td,{children:"TCP, UDP, SCTP"}),(0,i.jsx)(n.td,{children:"Hypertext Transfer Protocol Secure (HTTPS) uses TCP in versions 1.x and 2. HTTP/3 uses QUIC, a transport protocol on top of UDP."})]})]})]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Socket"})," = IP + Port"]})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},28453:(e,n,r)=>{r.d(n,{R:()=>d,x:()=>l});var t=r(96540);const i={},s=t.createContext(i);function d(e){const n=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:d(e.components),t.createElement(s.Provider,{value:n},e.children)}},53302:(e,n,r)=>{r.d(n,{A:()=>t});const t=r.p+"assets/images/TCP_Protocol-a047b9909de8a5d925c49a59c2a62532.png"},93998:(e,n,r)=>{r.d(n,{A:()=>t});const t=r.p+"assets/images/UDP_Protocol-04a29eb21580d8592c320ae4b5f75948.png"}}]);