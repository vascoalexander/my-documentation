"use strict";(self.webpackChunkmy_documentation=self.webpackChunkmy_documentation||[]).push([[5839],{6485:(n,e,a)=>{a.r(e),a.d(e,{assets:()=>s,contentTitle:()=>o,default:()=>b,frontMatter:()=>d,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"db/ProjectDB/projektdb07-selfjoin","title":"SELF JOIN","description":"","source":"@site/docs/06-db/ProjectDB/projektdb07-selfjoin.md","sourceDirName":"06-db/ProjectDB","slug":"/db/ProjectDB/projektdb07-selfjoin","permalink":"/my-documentation/docs/db/ProjectDB/projektdb07-selfjoin","draft":false,"unlisted":false,"editUrl":"https://github.com/vascoalexander/my-documentation/tree/main/docs/06-db/ProjectDB/projektdb07-selfjoin.md","tags":[],"version":"current","sidebarPosition":14,"frontMatter":{"sidebar_position":14,"description":"","draft":false,"title":"SELF JOIN"},"sidebar":"dbSidebar","previous":{"title":"INNER JOIN II","permalink":"/my-documentation/docs/db/ProjectDB/projektdb06-innerjoin2"},"next":{"title":"OUTER JOIN I","permalink":"/my-documentation/docs/db/ProjectDB/projektdb08-outerjoin1"}}');var i=a(4848),r=a(8453);const d={sidebar_position:14,description:"",draft:!1,title:"SELF JOIN"},o=void 0,s={},c=[];function u(n){const e={code:"code",pre:"pre",...(0,r.R)(),...n.components};return(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-sql",children:"-- Nutzen Sie die Datenbank ProjektDB, \n-- um die folgenden Aufgaben zu l\xf6sen:\n\nUSE ProjektDB;\n\n-- Aufgabe 7.1\n--\n-- Finden Sie alle Abteilungen, an deren Standorten \n-- sich weitere Abteilungen befinden. Geben Sie jeweils\n-- die Ids, Namen und St\xe4dte der Abteilungen aus.\n--\n--      id  bezeichnung  stadt    id  bezeichnung  stadt\n--      a1  Beratung     M\xfcnchen  a1  Beratung     M\xfcnchen\n--      a2  Diagnose     M\xfcnchen  a1  Beratung     M\xfcnchen\n--      a4  Einkauf      M\xfcnchen  a1  Beratung     M\xfcnchen\n--      a1  Beratung     M\xfcnchen  a2  Diagnose     M\xfcnchen\n--      a2  Diagnose     M\xfcnchen  a2  Diagnose     M\xfcnchen\n--      a4  Einkauf      M\xfcnchen  a2  Diagnose     M\xfcnchen\n--      ...\n--      (11 Zeilen)\n\nSELECT *\nFROM Abteilung a1\nINNER JOIN Abteilung a2 ON a1.stadt = a2.stadt\n\n-- Aufgabe 7.2\n--\n-- \xdcberarbeiten Sie die Abfrage aus Aufgabe 7.1.\n-- Diesmal sollen nur Zeilen ins Ergebnis \xfcbernommen \n-- werden, bei denen die Abteilungen sich unterscheiden.\n--\n--      id  bezeichnung  stadt    id  bezeichnung  stadt\n--      a1  Beratung     M\xfcnchen  a2  Diagnose     M\xfcnchen\n--      a1  Beratung     M\xfcnchen  a4  Einkauf      M\xfcnchen\n--      a2  Diagnose     M\xfcnchen  a1  Beratung     M\xfcnchen\n--      a2  Diagnose     M\xfcnchen  a4  Einkauf      M\xfcnchen\n--      a4  Einkauf      M\xfcnchen  a1  Beratung     M\xfcnchen\n--      a4  Einkauf      M\xfcnchen  a2  Diagnose     M\xfcnchen\n\nSELECT *\nFROM Abteilung a1\nINNER JOIN Abteilung a2 ON a1.stadt = a2.stadt\nWHERE a1.id <> a2.id;\n\n-- Aufgabe 7.3\n--\n-- \xdcberarbeiten Sie die Abfrage aus Aufgabe 7.2.\n-- Diesmal soll jede Kombination nur einmal angezeigt \n-- werden. D.h. A-B ist das gleiche wie B-A.\n--\n--      id  bezeichnung  stadt    id  bezeichnung  stadt\n--      a2  Diagnose     M\xfcnchen  a1  Beratung     M\xfcnchen\n--      a4  Einkauf      M\xfcnchen  a1  Beratung     M\xfcnchen\n--      a4  Einkauf      M\xfcnchen  a2  Diagnose     M\xfcnchen\n\nSELECT *\nFROM Abteilung a1\nINNER JOIN Abteilung a2 ON a1.stadt = a2.stadt AND a1.bezeichnung <> a2.bezeichnung\nWHERE a1.id < a2.id\n\n-- Aufgabe 7.4\n--\n-- Finden Sie heraus, ob es Mitarbeiter gibt, die einen \n-- Kollegen oder eine Kollegin aus derselben Abteilung \n-- in ihrem Wohnort haben (Stichwort Fahrgemeinschaft).\n--\n--      id     abt_id  nachname  stadt\n--      5765   a3      Sch\xe4fer   Landshut\n--      10102  a3      Huber     Landshut\n--      12121  a4      Richter   M\xfcnchen\n--      22222  a4      Vogel     M\xfcnchen\n\nSELECT m1.*\nFROM Mitarbeiter m1\nINNER JOIN Mitarbeiter m2 ON m1.stadt = m2.stadt\nWHERE m1.id <> m2.id AND m1.abt_id = m2.abt_id\n\n-- Aufgabe 7.5\n--\n-- Geben Sie die Mitarbeiter-Id, die Projektnummer und \n-- die Aufgabe der Mitarbeiter aus, die im gleichen \n-- Projekt die gleiche Aufgabe ausf\xfchren. Sortieren Sie\n-- die Ausgabe ggf. sinnvoll.\n--\n--      mit_id  pro_id  aufgabe\n--      25348   p2      Sachbearbeiter\n--      28559   p2      Sachbearbeiter\n--      20204   p4      Sachbearbeiter\n--      27365   p4      Sachbearbeiter\n\nSELECT a1.*\nFROM Arbeit a1\nINNER JOIN Arbeit a2 ON a1.pro_id = a2.pro_id AND a1.aufgabe = a2.aufgabe\nWHERE a1.mit_id <> a2.mit_id\nORDER BY pro_id DESC\n"})})}function b(n={}){const{wrapper:e}={...(0,r.R)(),...n.components};return e?(0,i.jsx)(e,{...n,children:(0,i.jsx)(u,{...n})}):u(n)}},8453:(n,e,a)=>{a.d(e,{R:()=>d,x:()=>o});var t=a(6540);const i={},r=t.createContext(i);function d(n){const e=t.useContext(r);return t.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function o(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(i):n.components||i:d(n.components),t.createElement(r.Provider,{value:e},n.children)}}}]);